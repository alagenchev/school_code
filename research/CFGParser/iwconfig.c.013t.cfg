
;; Function main (main)

Merging blocks 15 and 16
main (int argc, char * * argv)
{
  char * buf2;
  char buf1[4];
  int goterr;
  int skfd;
  int D.5832;
  const char * restrict buf2.0;
  char * * D.5830;
  int D.5829;
  char * D.5828;
  char * * D.5827;
  char * D.5825;
  char * * D.5824;
  int D.5821;
  char * D.5820;
  char * * D.5819;
  int D.5817;
  char * D.5816;
  char * * D.5815;
  int D.5811;
  char * D.5810;
  char * * D.5809;
  int D.5807;
  char * D.5806;
  char * * D.5805;

<bb 2>:
  goterr = 0;
  buf2 = "aa";
  skfd = iw_sockets_open ();
  if (skfd < 0)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  perror ("socket");
  exit (-1);

<bb 4>:
  if (argc == 1)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  iw_enum_devices (skfd, print_info, 0B, 0);
  goto <bb 15>;

<bb 6>:
  D.5805 = argv + 8;
  D.5806 = *D.5805;
  D.5807 = strcmp (D.5806, "-h");
  if (D.5807 == 0)
    goto <bb 8>;
  else
    goto <bb 7>;

<bb 7>:
  D.5809 = argv + 8;
  D.5810 = *D.5809;
  D.5811 = strcmp (D.5810, "--help");
  if (D.5811 == 0)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  iw_usage ();
  goto <bb 15>;

<bb 9>:
  D.5815 = argv + 8;
  D.5816 = *D.5815;
  D.5817 = strcmp (D.5816, "-v");
  if (D.5817 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;

<bb 10>:
  D.5819 = argv + 8;
  D.5820 = *D.5819;
  D.5821 = strcmp (D.5820, "--version");
  if (D.5821 == 0)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  goterr = iw_print_version_info ("iwconfig");
  goto <bb 15>;

<bb 12>:
  if (argc == 2)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  D.5824 = argv + 8;
  D.5825 = *D.5824;
  print_info (skfd, D.5825, 0B, 0);
  goto <bb 15>;

<bb 14>:
  D.5827 = argv + 8;
  D.5828 = *D.5827;
  D.5829 = argc + -2;
  D.5830 = argv + 16;
  goterr = set_info (skfd, D.5830, D.5829, D.5828);

<bb 15>:
  close (skfd);
  buf2.0 = (const char * restrict) buf2;
  strcpy (&buf1, buf2.0);
  D.5832 = goterr;
  return D.5832;

}



;; Function set_info (set_info)

Removing basic block 216
Removing basic block 223
Removing basic block 291
Removing basic block 298
set_info (int skfd, char * * args, int count, char * ifname)
{
  int gotone;
  double temp;
  int ismwatt;
  int power;
  struct iw_range range;
  int gotone;
  double temp;
  int k;
  double brate;
  int temp;
  char essid[33];
  int temp;
  int keylen;
  int oldone;
  int gotone;
  unsigned char key[64];
  double freq;
  int i;
  struct iwreq wrq;
  struct FILE * restrict stderr.291;
  struct _IO_FILE * stderr.290;
  const char * restrict D.7323;
  char * D.7322;
  char * * D.7321;
  long unsigned int D.7320;
  long unsigned int D.7319;
  struct FILE * restrict stderr.289;
  struct _IO_FILE * stderr.288;
  const char * restrict D.7316;
  char * D.7315;
  int D.7314;
  int * D.7313;
  struct FILE * restrict stderr.287;
  struct _IO_FILE * stderr.286;
  const char * restrict D.7310;
  int D.7307;
  struct FILE * restrict stderr.285;
  struct _IO_FILE * stderr.284;
  const char * restrict D.7304;
  char * D.7303;
  char * * D.7302;
  long unsigned int D.7301;
  long unsigned int D.7300;
  struct FILE * restrict stderr.283;
  struct _IO_FILE * stderr.282;
  const char * restrict D.7297;
  __s32 D.7294;
  long int D.7293;
  double temp.281;
  double temp.280;
  double temp.279;
  char * D.7287;
  char * D.7286;
  char * * D.7285;
  long unsigned int D.7284;
  long unsigned int D.7283;
  double temp.278;
  double temp.277;
  char * D.7278;
  char * D.7277;
  char * * D.7276;
  long unsigned int D.7275;
  long unsigned int D.7274;
  double temp.276;
  double temp.275;
  int D.7269;
  int D.7268;
  __u16 D.7267;
  int D.7264;
  const char * restrict D.7263;
  char * D.7262;
  char * * D.7261;
  long unsigned int D.7260;
  long unsigned int D.7259;
  const char * restrict D.7258;
  const char * restrict D.7257;
  struct FILE * restrict stderr.274;
  struct _IO_FILE * stderr.273;
  struct FILE * restrict stderr.272;
  struct _IO_FILE * stderr.271;
  const char * restrict D.7252;
  short unsigned int D.7249;
  __u16 D.7248;
  __u16 D.7247;
  __u16 D.7246;
  int D.7243;
  char * D.7242;
  char * * D.7241;
  long unsigned int D.7240;
  long unsigned int D.7239;
  const char * restrict D.7237;
  struct FILE * restrict stderr.270;
  struct _IO_FILE * stderr.269;
  struct FILE * restrict stderr.268;
  struct _IO_FILE * stderr.267;
  const char * restrict D.7232;
  short unsigned int D.7229;
  __u16 D.7228;
  int D.7225;
  char * D.7224;
  char * * D.7223;
  long unsigned int D.7222;
  long unsigned int D.7221;
  const char * restrict D.7220;
  struct FILE * restrict stderr.266;
  struct _IO_FILE * stderr.265;
  struct FILE * restrict stderr.264;
  struct _IO_FILE * stderr.263;
  const char * restrict D.7215;
  short unsigned int D.7212;
  __u16 D.7211;
  int D.7208;
  char * D.7207;
  char * * D.7206;
  long unsigned int D.7205;
  long unsigned int D.7204;
  const char * restrict D.7202;
  struct FILE * restrict stderr.262;
  struct _IO_FILE * stderr.261;
  struct FILE * restrict stderr.260;
  struct _IO_FILE * stderr.259;
  const char * restrict D.7197;
  short unsigned int D.7194;
  __u16 D.7193;
  int D.7190;
  char * D.7189;
  char * * D.7188;
  long unsigned int D.7187;
  long unsigned int D.7186;
  const char * restrict D.7185;
  struct FILE * restrict stderr.258;
  struct _IO_FILE * stderr.257;
  struct FILE * restrict stderr.256;
  struct _IO_FILE * stderr.255;
  const char * restrict D.7180;
  int D.7175;
  char * D.7174;
  char * * D.7173;
  long unsigned int D.7172;
  long unsigned int D.7171;
  struct FILE * restrict stderr.254;
  struct _IO_FILE * stderr.253;
  const char * restrict D.7168;
  char * D.7167;
  int D.7166;
  int * D.7165;
  struct FILE * restrict stderr.252;
  struct _IO_FILE * stderr.251;
  const char * restrict D.7162;
  int D.7159;
  int D.7156;
  char * D.7155;
  char * * D.7154;
  long unsigned int D.7153;
  long unsigned int D.7152;
  long unsigned int D.7151;
  int D.7148;
  int D.7145;
  char * D.7144;
  char * * D.7143;
  long unsigned int D.7142;
  long unsigned int D.7141;
  long unsigned int D.7140;
  int D.7137;
  int power.250;
  int power.249;
  int power.248;
  int power.247;
  int power.246;
  _Bool D.7124;
  int D.7123;
  int D.7122;
  __u16 D.7121;
  char * D.7120;
  char * D.7119;
  char * * D.7118;
  long unsigned int D.7117;
  long unsigned int D.7116;
  struct FILE * restrict stderr.245;
  struct _IO_FILE * stderr.244;
  const char * restrict D.7113;
  char * D.7112;
  char * * D.7111;
  long unsigned int D.7110;
  long unsigned int D.7109;
  struct FILE * restrict stderr.243;
  struct _IO_FILE * stderr.242;
  const char * restrict D.7106;
  int D.7103;
  const char * restrict D.7102;
  char * D.7101;
  char * * D.7100;
  long unsigned int D.7099;
  long unsigned int D.7098;
  const char * restrict D.7097;
  struct FILE * restrict stderr.241;
  struct _IO_FILE * stderr.240;
  const char * restrict D.7093;
  char * D.7092;
  int D.7091;
  int * D.7090;
  struct FILE * restrict stderr.239;
  struct _IO_FILE * stderr.238;
  const char * restrict D.7087;
  int D.7084;
  int D.7081;
  char * D.7080;
  char * * D.7079;
  long unsigned int D.7078;
  long unsigned int D.7077;
  int D.7073;
  char * D.7072;
  char * * D.7071;
  long unsigned int D.7070;
  long unsigned int D.7069;
  int D.7065;
  char * D.7064;
  char * * D.7063;
  long unsigned int D.7062;
  long unsigned int D.7061;
  int D.7058;
  const char * restrict D.7057;
  struct FILE * restrict stderr.237;
  struct _IO_FILE * stderr.236;
  struct FILE * restrict stderr.235;
  struct _IO_FILE * stderr.234;
  const char * restrict D.7052;
  int D.7047;
  char * D.7046;
  char * * D.7045;
  long unsigned int D.7044;
  long unsigned int D.7043;
  struct FILE * restrict stderr.233;
  struct _IO_FILE * stderr.232;
  const char * restrict D.7040;
  char * D.7039;
  int D.7038;
  int * D.7037;
  struct FILE * restrict stderr.231;
  struct _IO_FILE * stderr.230;
  const char * restrict D.7034;
  int D.7031;
  struct FILE * restrict stderr.229;
  struct _IO_FILE * stderr.228;
  const char * restrict D.7028;
  char * D.7027;
  char * * D.7026;
  long unsigned int D.7025;
  long unsigned int D.7024;
  struct FILE * restrict stderr.227;
  struct _IO_FILE * stderr.226;
  const char * restrict D.7021;
  int D.7016;
  int D.7015;
  __u16 D.7014;
  short unsigned int D.7013;
  __u16 D.7012;
  int D.7009;
  char * D.7008;
  char * * D.7007;
  long unsigned int D.7006;
  long unsigned int D.7005;
  short unsigned int D.7004;
  __u16 D.7003;
  int D.7000;
  char * D.6999;
  char * * D.6998;
  long unsigned int D.6997;
  long unsigned int D.6996;
  short unsigned int D.6995;
  __u16 D.6994;
  int D.6991;
  char * D.6990;
  char * * D.6989;
  long unsigned int D.6988;
  long unsigned int D.6987;
  short unsigned int D.6986;
  __u16 D.6985;
  int D.6982;
  char * D.6981;
  char * * D.6980;
  long unsigned int D.6979;
  long unsigned int D.6978;
  short unsigned int D.6977;
  __u16 D.6976;
  int D.6973;
  char * D.6972;
  char * * D.6971;
  long unsigned int D.6970;
  long unsigned int D.6969;
  short unsigned int D.6966;
  __u16 D.6965;
  int D.6962;
  int D.6961;
  __u16 D.6960;
  __s32 D.6959;
  long int D.6958;
  double temp.225;
  double temp.224;
  double temp.223;
  char * D.6952;
  char * D.6951;
  char * * D.6950;
  long unsigned int D.6949;
  long unsigned int D.6948;
  double temp.222;
  double temp.221;
  char * D.6943;
  char * D.6942;
  char * * D.6941;
  long unsigned int D.6940;
  long unsigned int D.6939;
  double temp.220;
  double temp.219;
  int D.6934;
  const char * restrict D.6933;
  char * D.6932;
  char * * D.6931;
  long unsigned int D.6930;
  long unsigned int D.6929;
  const char * restrict D.6928;
  const char * restrict D.6927;
  struct FILE * restrict stderr.218;
  struct _IO_FILE * stderr.217;
  struct FILE * restrict stderr.216;
  struct _IO_FILE * stderr.215;
  const char * restrict D.6922;
  short unsigned int D.6919;
  __u16 D.6918;
  int D.6915;
  char * D.6914;
  char * * D.6913;
  long unsigned int D.6912;
  long unsigned int D.6911;
  const char * restrict D.6909;
  struct FILE * restrict stderr.214;
  struct _IO_FILE * stderr.213;
  struct FILE * restrict stderr.212;
  struct _IO_FILE * stderr.211;
  const char * restrict D.6904;
  short unsigned int D.6901;
  __u16 D.6900;
  int D.6897;
  char * D.6896;
  char * * D.6895;
  long unsigned int D.6894;
  long unsigned int D.6893;
  const char * restrict D.6892;
  struct FILE * restrict stderr.210;
  struct _IO_FILE * stderr.209;
  struct FILE * restrict stderr.208;
  struct _IO_FILE * stderr.207;
  const char * restrict D.6887;
  short unsigned int D.6884;
  __u16 D.6883;
  int D.6880;
  char * D.6879;
  char * * D.6878;
  long unsigned int D.6877;
  long unsigned int D.6876;
  const char * restrict D.6874;
  struct FILE * restrict stderr.206;
  struct _IO_FILE * stderr.205;
  struct FILE * restrict stderr.204;
  struct _IO_FILE * stderr.203;
  const char * restrict D.6869;
  short unsigned int D.6866;
  __u16 D.6865;
  int D.6862;
  char * D.6861;
  char * * D.6860;
  long unsigned int D.6859;
  long unsigned int D.6858;
  struct FILE * restrict stderr.202;
  struct _IO_FILE * stderr.201;
  const char * restrict D.6854;
  char * D.6853;
  int D.6852;
  int * D.6851;
  struct FILE * restrict stderr.200;
  struct _IO_FILE * stderr.199;
  const char * restrict D.6848;
  int D.6845;
  int D.6842;
  char * D.6841;
  char * * D.6840;
  long unsigned int D.6839;
  long unsigned int D.6838;
  int D.6834;
  char * D.6833;
  char * * D.6832;
  long unsigned int D.6831;
  long unsigned int D.6830;
  const char * restrict D.6829;
  struct FILE * restrict stderr.198;
  struct _IO_FILE * stderr.197;
  struct FILE * restrict stderr.196;
  struct _IO_FILE * stderr.195;
  const char * restrict D.6824;
  int D.6819;
  char * D.6818;
  char * * D.6817;
  long unsigned int D.6816;
  long unsigned int D.6815;
  struct FILE * restrict stderr.194;
  struct _IO_FILE * stderr.193;
  const char * restrict D.6812;
  char * D.6811;
  int D.6810;
  int * D.6809;
  struct FILE * restrict stderr.192;
  struct _IO_FILE * stderr.191;
  const char * restrict D.6806;
  int D.6803;
  __u32 k.190;
  int k.189;
  struct FILE * restrict stderr.188;
  struct _IO_FILE * stderr.187;
  const char * restrict D.6798;
  char * D.6797;
  char * * D.6796;
  long unsigned int D.6795;
  long unsigned int D.6794;
  struct FILE * restrict stderr.186;
  struct _IO_FILE * stderr.185;
  const char * restrict D.6791;
  int k.184;
  int k.183;
  int D.6785;
  char * D.6784;
  char * * D.6783;
  long unsigned int D.6782;
  long unsigned int D.6781;
  const char * const D.6780;
  int k.182;
  int k.181;
  int k.180;
  int k.179;
  int D.6772;
  const char * restrict D.6771;
  char * D.6770;
  char * * D.6769;
  long unsigned int D.6768;
  long unsigned int D.6767;
  const char * restrict D.6766;
  const char * restrict D.6765;
  struct FILE * restrict stderr.178;
  struct _IO_FILE * stderr.177;
  struct FILE * restrict stderr.176;
  struct _IO_FILE * stderr.175;
  const char * restrict D.6760;
  int D.6755;
  char * D.6754;
  char * * D.6753;
  long unsigned int D.6752;
  long unsigned int D.6751;
  struct FILE * restrict stderr.174;
  struct _IO_FILE * stderr.173;
  const char * restrict D.6748;
  char * D.6747;
  int D.6746;
  int * D.6745;
  struct FILE * restrict stderr.172;
  struct _IO_FILE * stderr.171;
  const char * restrict D.6742;
  int D.6739;
  struct FILE * restrict stderr.170;
  struct _IO_FILE * stderr.169;
  const char * restrict D.6736;
  char * D.6735;
  char * * D.6734;
  long unsigned int D.6733;
  long unsigned int D.6732;
  struct FILE * restrict stderr.168;
  struct _IO_FILE * stderr.167;
  const char * restrict D.6729;
  int D.6726;
  const char * restrict D.6725;
  char * D.6724;
  char * * D.6723;
  long unsigned int D.6722;
  long unsigned int D.6721;
  const char * restrict D.6720;
  struct FILE * restrict stderr.166;
  struct _IO_FILE * stderr.165;
  const char * restrict D.6716;
  char * D.6715;
  int D.6714;
  int * D.6713;
  struct FILE * restrict stderr.164;
  struct _IO_FILE * stderr.163;
  const char * restrict D.6710;
  int D.6707;
  int D.6704;
  char * D.6703;
  char * * D.6702;
  long unsigned int D.6701;
  long unsigned int D.6700;
  int D.6696;
  char * D.6695;
  char * * D.6694;
  long unsigned int D.6693;
  long unsigned int D.6692;
  int D.6688;
  char * D.6687;
  char * * D.6686;
  long unsigned int D.6685;
  long unsigned int D.6684;
  const char * restrict D.6683;
  struct FILE * restrict stderr.162;
  struct _IO_FILE * stderr.161;
  struct FILE * restrict stderr.160;
  struct _IO_FILE * stderr.159;
  const char * restrict D.6678;
  int D.6673;
  char * D.6672;
  char * * D.6671;
  long unsigned int D.6670;
  long unsigned int D.6669;
  struct FILE * restrict stderr.158;
  struct _IO_FILE * stderr.157;
  const char * restrict D.6666;
  char * D.6665;
  int D.6664;
  int * D.6663;
  struct FILE * restrict stderr.156;
  struct _IO_FILE * stderr.155;
  const char * restrict D.6660;
  int D.6657;
  struct FILE * restrict stderr.154;
  struct _IO_FILE * stderr.153;
  const char * restrict D.6654;
  char * D.6653;
  char * * D.6652;
  long unsigned int D.6651;
  long unsigned int D.6650;
  struct FILE * restrict stderr.152;
  struct _IO_FILE * stderr.151;
  const char * restrict D.6647;
  int D.6644;
  const char * restrict D.6643;
  char * D.6642;
  char * * D.6641;
  long unsigned int D.6640;
  long unsigned int D.6639;
  const char * restrict D.6638;
  struct FILE * restrict stderr.150;
  struct _IO_FILE * stderr.149;
  const char * restrict D.6634;
  char * D.6633;
  int D.6632;
  int * D.6631;
  struct FILE * restrict stderr.148;
  struct _IO_FILE * stderr.147;
  const char * restrict D.6628;
  int D.6625;
  int D.6622;
  char * D.6621;
  char * * D.6620;
  long unsigned int D.6619;
  long unsigned int D.6618;
  int D.6614;
  char * D.6613;
  char * * D.6612;
  long unsigned int D.6611;
  long unsigned int D.6610;
  int D.6606;
  char * D.6605;
  char * * D.6604;
  long unsigned int D.6603;
  long unsigned int D.6602;
  const char * restrict D.6601;
  struct FILE * restrict stderr.146;
  struct _IO_FILE * stderr.145;
  struct FILE * restrict stderr.144;
  struct _IO_FILE * stderr.143;
  const char * restrict D.6596;
  int D.6591;
  char * D.6590;
  char * * D.6589;
  long unsigned int D.6588;
  long unsigned int D.6587;
  struct FILE * restrict stderr.142;
  struct _IO_FILE * stderr.141;
  const char * restrict D.6584;
  char * D.6583;
  int D.6582;
  int * D.6581;
  struct FILE * restrict stderr.140;
  struct _IO_FILE * stderr.139;
  const char * restrict D.6578;
  int D.6575;
  int D.6572;
  char * D.6571;
  char * * D.6570;
  long unsigned int D.6569;
  long unsigned int D.6568;
  long unsigned int D.6567;
  int D.6564;
  int D.6561;
  char * D.6560;
  char * * D.6559;
  long unsigned int D.6558;
  long unsigned int D.6557;
  long unsigned int D.6556;
  int D.6553;
  __s32 D.6552;
  long int D.6551;
  double brate.138;
  double brate.137;
  double brate.136;
  char * D.6545;
  char * D.6544;
  char * * D.6543;
  long unsigned int D.6542;
  long unsigned int D.6541;
  double brate.135;
  double brate.134;
  char * D.6536;
  char * D.6535;
  char * * D.6534;
  long unsigned int D.6533;
  long unsigned int D.6532;
  double brate.133;
  double brate.132;
  char * D.6527;
  char * D.6526;
  char * * D.6525;
  long unsigned int D.6524;
  long unsigned int D.6523;
  struct FILE * restrict stderr.131;
  struct _IO_FILE * stderr.130;
  const char * restrict D.6520;
  char * D.6519;
  char * * D.6518;
  long unsigned int D.6517;
  long unsigned int D.6516;
  struct FILE * restrict stderr.129;
  struct _IO_FILE * stderr.128;
  const char * restrict D.6513;
  int D.6510;
  const char * restrict D.6509;
  char * D.6508;
  char * * D.6507;
  long unsigned int D.6506;
  long unsigned int D.6505;
  const char * restrict D.6504;
  struct FILE * restrict stderr.127;
  struct _IO_FILE * stderr.126;
  const char * restrict D.6500;
  char * D.6499;
  int D.6498;
  int * D.6497;
  struct FILE * restrict stderr.125;
  struct _IO_FILE * stderr.124;
  const char * restrict D.6494;
  int D.6491;
  int D.6488;
  char * D.6487;
  char * * D.6486;
  long unsigned int D.6485;
  long unsigned int D.6484;
  int D.6480;
  char * D.6479;
  char * * D.6478;
  long unsigned int D.6477;
  long unsigned int D.6476;
  const char * restrict D.6475;
  struct FILE * restrict stderr.123;
  struct _IO_FILE * stderr.122;
  struct FILE * restrict stderr.121;
  struct _IO_FILE * stderr.120;
  const char * restrict D.6470;
  int D.6467;
  char * D.6466;
  char * * D.6465;
  long unsigned int D.6464;
  long unsigned int D.6463;
  int D.6461;
  char * D.6460;
  char * * D.6459;
  long unsigned int D.6458;
  long unsigned int D.6457;
  struct FILE * restrict stderr.119;
  struct _IO_FILE * stderr.118;
  const char * restrict D.6452;
  char * D.6451;
  int D.6450;
  int * D.6449;
  struct FILE * restrict stderr.117;
  struct _IO_FILE * stderr.116;
  const char * restrict D.6446;
  int D.6443;
  __u16 D.6442;
  __u16 D.6441;
  size_t D.6440;
  char * D.6439;
  char * * D.6438;
  long unsigned int D.6437;
  long unsigned int D.6436;
  char * D.6435;
  char * * D.6434;
  long unsigned int D.6433;
  long unsigned int D.6432;
  struct FILE * restrict stderr.115;
  struct _IO_FILE * stderr.114;
  const char * restrict D.6429;
  struct FILE * restrict stderr.113;
  struct _IO_FILE * stderr.112;
  const char * restrict D.6426;
  size_t D.6423;
  char * D.6422;
  char * * D.6421;
  long unsigned int D.6420;
  long unsigned int D.6419;
  const char * restrict D.6418;
  struct FILE * restrict stderr.111;
  struct _IO_FILE * stderr.110;
  struct FILE * restrict stderr.109;
  struct _IO_FILE * stderr.108;
  const char * restrict D.6413;
  int D.6408;
  char * D.6407;
  char * * D.6406;
  long unsigned int D.6405;
  long unsigned int D.6404;
  struct FILE * restrict stderr.107;
  struct _IO_FILE * stderr.106;
  const char * restrict D.6401;
  char * D.6400;
  int D.6399;
  int * D.6398;
  struct FILE * restrict stderr.105;
  struct _IO_FILE * stderr.104;
  const char * restrict D.6395;
  int D.6392;
  struct FILE * restrict stderr.103;
  struct _IO_FILE * stderr.102;
  const char * restrict D.6389;
  char * D.6388;
  char * * D.6387;
  long unsigned int D.6386;
  long unsigned int D.6385;
  long unsigned int D.6384;
  struct FILE * restrict stderr.101;
  struct _IO_FILE * stderr.100;
  const char * restrict D.6381;
  int D.6378;
  char * D.6377;
  char * * D.6376;
  long unsigned int D.6375;
  long unsigned int D.6374;
  int D.6370;
  char * D.6369;
  char * * D.6368;
  long unsigned int D.6367;
  long unsigned int D.6366;
  int D.6365;
  char * D.6364;
  char * * D.6363;
  long unsigned int D.6362;
  long unsigned int D.6361;
  int D.6359;
  char * D.6358;
  char * * D.6357;
  long unsigned int D.6356;
  long unsigned int D.6355;
  const char * restrict D.6351;
  struct FILE * restrict stderr.99;
  struct _IO_FILE * stderr.98;
  struct FILE * restrict stderr.97;
  struct _IO_FILE * stderr.96;
  const char * restrict D.6346;
  int D.6341;
  char * D.6340;
  char * * D.6339;
  long unsigned int D.6338;
  long unsigned int D.6337;
  struct FILE * restrict stderr.95;
  struct _IO_FILE * stderr.94;
  const char * restrict D.6334;
  char * D.6333;
  int D.6332;
  int * D.6331;
  struct FILE * restrict stderr.93;
  struct _IO_FILE * stderr.92;
  const char * restrict D.6328;
  int D.6325;
  __u16 D.6324;
  __u16 D.6323;
  size_t D.6322;
  __u16 D.6321;
  int temp.91;
  int temp.90;
  int temp.89;
  int D.6311;
  const char * restrict D.6310;
  char * D.6309;
  char * * D.6308;
  long unsigned int D.6307;
  long unsigned int D.6306;
  long unsigned int D.6305;
  const char * restrict D.6304;
  int D.6301;
  const char * restrict D.6300;
  char * D.6299;
  char * * D.6298;
  long unsigned int D.6297;
  long unsigned int D.6296;
  struct FILE * restrict stderr.88;
  struct _IO_FILE * stderr.87;
  const char * restrict D.6293;
  struct FILE * restrict stderr.86;
  struct _IO_FILE * stderr.85;
  const char * restrict D.6290;
  size_t D.6287;
  char * D.6286;
  char * * D.6285;
  long unsigned int D.6284;
  long unsigned int D.6283;
  const char * restrict D.6282;
  struct FILE * restrict stderr.84;
  struct _IO_FILE * stderr.83;
  struct FILE * restrict stderr.82;
  struct _IO_FILE * stderr.81;
  const char * restrict D.6277;
  int D.6272;
  char * D.6271;
  char * * D.6270;
  long unsigned int D.6269;
  long unsigned int D.6268;
  struct FILE * restrict stderr.80;
  struct _IO_FILE * stderr.79;
  const char * restrict D.6264;
  char * D.6263;
  int D.6262;
  int * D.6261;
  struct FILE * restrict stderr.78;
  struct _IO_FILE * stderr.77;
  const char * restrict D.6258;
  int D.6255;
  int D.6252;
  char * D.6251;
  char * * D.6250;
  long unsigned int D.6249;
  long unsigned int D.6248;
  int D.6247;
  char * D.6246;
  char * * D.6245;
  long unsigned int D.6244;
  long unsigned int D.6243;
  int D.6241;
  char * D.6240;
  char * * D.6239;
  long unsigned int D.6238;
  long unsigned int D.6237;
  const char * restrict D.6233;
  struct FILE * restrict stderr.76;
  struct _IO_FILE * stderr.75;
  struct FILE * restrict stderr.74;
  struct _IO_FILE * stderr.73;
  const char * restrict D.6228;
  int D.6223;
  char * D.6222;
  char * * D.6221;
  long unsigned int D.6220;
  long unsigned int D.6219;
  struct FILE * restrict stderr.72;
  struct _IO_FILE * stderr.71;
  const char * restrict D.6216;
  char * D.6215;
  int D.6214;
  int * D.6213;
  struct FILE * restrict stderr.70;
  struct _IO_FILE * stderr.69;
  const char * restrict D.6210;
  int D.6207;
  struct FILE * restrict stderr.68;
  struct _IO_FILE * stderr.67;
  const char * restrict D.6204;
  char * D.6203;
  char * * D.6202;
  long unsigned int D.6201;
  long unsigned int D.6200;
  struct FILE * restrict stderr.66;
  struct _IO_FILE * stderr.65;
  const char * restrict D.6197;
  short unsigned int D.6194;
  __u16 D.6193;
  void * D.6190;
  short unsigned int D.6189;
  __u16 D.6188;
  int D.6185;
  char * D.6184;
  char * * D.6183;
  long unsigned int D.6182;
  long unsigned int D.6181;
  short unsigned int D.6178;
  __u16 D.6177;
  int D.6174;
  char * D.6173;
  char * * D.6172;
  long unsigned int D.6171;
  long unsigned int D.6170;
  short unsigned int D.6167;
  __u16 D.6166;
  int D.6163;
  char * D.6162;
  char * * D.6161;
  long unsigned int D.6160;
  long unsigned int D.6159;
  short unsigned int D.6156;
  __u16 D.6155;
  int D.6152;
  char * D.6151;
  char * * D.6150;
  long unsigned int D.6149;
  long unsigned int D.6148;
  __u16 D.6145;
  short int D.6144;
  short int D.6143;
  int temp.64;
  short int D.6141;
  __u16 D.6140;
  int temp.63;
  int temp.62;
  int D.6131;
  const char * restrict D.6130;
  char * D.6129;
  char * * D.6128;
  long unsigned int D.6127;
  long unsigned int D.6126;
  const char * restrict D.6125;
  __u16 D.6122;
  char * D.6119;
  char * * D.6118;
  long unsigned int D.6117;
  long unsigned int D.6116;
  __u16 D.6112;
  __u16 D.6111;
  struct FILE * restrict stderr.61;
  struct _IO_FILE * stderr.60;
  const char * restrict D.6108;
  char * D.6107;
  int D.6106;
  int * D.6105;
  struct FILE * restrict stderr.59;
  struct _IO_FILE * stderr.58;
  const char * restrict D.6102;
  int D.6099;
  int D.6096;
  char * D.6095;
  char * * D.6094;
  long unsigned int D.6093;
  long unsigned int D.6092;
  const char * restrict D.6091;
  struct FILE * restrict stderr.57;
  struct _IO_FILE * stderr.56;
  struct FILE * restrict stderr.55;
  struct _IO_FILE * stderr.54;
  const char * restrict D.6086;
  int D.6083;
  char * D.6082;
  char * * D.6081;
  long unsigned int D.6080;
  long unsigned int D.6079;
  int D.6077;
  char * D.6076;
  char * * D.6075;
  long unsigned int D.6074;
  long unsigned int D.6073;
  struct FILE * restrict stderr.53;
  struct _IO_FILE * stderr.52;
  const char * restrict D.6068;
  char * D.6067;
  int D.6066;
  int * D.6065;
  struct FILE * restrict stderr.51;
  struct _IO_FILE * stderr.50;
  const char * restrict D.6062;
  int D.6059;
  struct FILE * restrict stderr.49;
  struct _IO_FILE * stderr.48;
  const char * restrict D.6056;
  char * D.6055;
  char * * D.6054;
  long unsigned int D.6053;
  long unsigned int D.6052;
  struct FILE * restrict stderr.47;
  struct _IO_FILE * stderr.46;
  const char * restrict D.6049;
  int D.6046;
  const char * restrict D.6045;
  char * D.6044;
  char * * D.6043;
  long unsigned int D.6042;
  long unsigned int D.6041;
  const char * restrict D.6040;
  const char * restrict D.6039;
  struct FILE * restrict stderr.45;
  struct _IO_FILE * stderr.44;
  struct FILE * restrict stderr.43;
  struct _IO_FILE * stderr.42;
  const char * restrict D.6034;
  int D.6029;
  char * D.6028;
  char * * D.6027;
  long unsigned int D.6026;
  long unsigned int D.6025;
  struct FILE * restrict stderr.41;
  struct _IO_FILE * stderr.40;
  const char * restrict D.6022;
  char * D.6021;
  int D.6020;
  int * D.6019;
  struct FILE * restrict stderr.39;
  struct _IO_FILE * stderr.38;
  const char * restrict D.6016;
  int D.6013;
  double freq.37;
  double freq.36;
  double freq.35;
  char * D.6007;
  char * D.6006;
  char * * D.6005;
  long unsigned int D.6004;
  long unsigned int D.6003;
  double freq.34;
  double freq.33;
  char * D.5998;
  char * D.5997;
  char * * D.5996;
  long unsigned int D.5995;
  long unsigned int D.5994;
  double freq.32;
  double freq.31;
  char * D.5989;
  char * D.5988;
  char * * D.5987;
  long unsigned int D.5986;
  long unsigned int D.5985;
  struct FILE * restrict stderr.30;
  struct _IO_FILE * stderr.29;
  const char * restrict D.5982;
  char * D.5981;
  char * * D.5980;
  long unsigned int D.5979;
  long unsigned int D.5978;
  struct FILE * restrict stderr.28;
  struct _IO_FILE * stderr.27;
  const char * restrict D.5975;
  int D.5972;
  const char * restrict D.5971;
  char * D.5970;
  char * * D.5969;
  long unsigned int D.5968;
  long unsigned int D.5967;
  const char * restrict D.5966;
  const char * restrict D.5965;
  struct FILE * restrict stderr.26;
  struct _IO_FILE * stderr.25;
  struct FILE * restrict stderr.24;
  struct _IO_FILE * stderr.23;
  const char * restrict D.5960;
  int D.5957;
  char * D.5956;
  char * * D.5955;
  long unsigned int D.5954;
  long unsigned int D.5953;
  int D.5951;
  char * D.5950;
  char * * D.5949;
  long unsigned int D.5948;
  long unsigned int D.5947;
  struct FILE * restrict stderr.22;
  struct _IO_FILE * stderr.21;
  const char * restrict D.5942;
  char * D.5941;
  int D.5940;
  int * D.5939;
  struct FILE * restrict stderr.20;
  struct _IO_FILE * stderr.19;
  const char * restrict D.5936;
  int D.5933;
  struct FILE * restrict stderr.18;
  struct _IO_FILE * stderr.17;
  const char * restrict D.5930;
  char * D.5929;
  char * * D.5928;
  long unsigned int D.5927;
  long unsigned int D.5926;
  struct FILE * restrict stderr.16;
  struct _IO_FILE * stderr.15;
  const char * restrict D.5923;
  int D.5920;
  const char * restrict D.5919;
  char * D.5918;
  char * * D.5917;
  long unsigned int D.5916;
  long unsigned int D.5915;
  const char * restrict D.5914;
  struct FILE * restrict stderr.14;
  struct _IO_FILE * stderr.13;
  const char * restrict D.5910;
  char * D.5909;
  int D.5908;
  int * D.5907;
  struct FILE * restrict stderr.12;
  struct _IO_FILE * stderr.11;
  const char * restrict D.5904;
  int D.5901;
  int D.5898;
  char * D.5897;
  char * * D.5896;
  long unsigned int D.5895;
  long unsigned int D.5894;
  int D.5893;
  char * D.5892;
  char * * D.5891;
  long unsigned int D.5890;
  long unsigned int D.5889;
  int D.5887;
  char * D.5886;
  char * * D.5885;
  long unsigned int D.5884;
  long unsigned int D.5883;
  const char * restrict D.5879;
  struct FILE * restrict stderr.10;
  struct _IO_FILE * stderr.9;
  struct FILE * restrict stderr.8;
  struct _IO_FILE * stderr.7;
  const char * restrict D.5874;
  int D.5871;
  char * D.5870;
  char * * D.5869;
  long unsigned int D.5868;
  long unsigned int D.5867;
  int D.5865;
  char * D.5864;
  char * * D.5863;
  long unsigned int D.5862;
  long unsigned int D.5861;
  struct FILE * restrict stderr.6;
  struct _IO_FILE * stderr.5;
  const char * restrict D.5856;
  char * D.5855;
  int D.5854;
  int * D.5853;
  struct FILE * restrict stderr.4;
  struct _IO_FILE * stderr.3;
  const char * restrict D.5850;
  int D.5847;
  int D.5844;
  char * D.5843;
  char * * D.5842;
  long unsigned int D.5841;
  long unsigned int D.5840;
  int D.5839;
  const char * restrict D.5838;
  struct FILE * restrict stderr.2;
  struct _IO_FILE * stderr.1;

<bb 2>:
  if (count <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  stderr.1 = stderr;
  stderr.2 = (struct FILE * restrict) stderr.1;
  D.5838 = (const char * restrict) &"Error : too few arguments.\n"[0];
  __builtin_fwrite (D.5838, 1, 27, stderr.2);
  D.5839 = -1;
  goto <bb 314>;

<bb 4>:
  i = 0;
  goto <bb 312>;

<bb 5>:
  D.5840 = (long unsigned int) i;
  D.5841 = D.5840 * 8;
  D.5842 = args + D.5841;
  D.5843 = *D.5842;
  D.5844 = strncmp (D.5843, "commit", 6);
  if (D.5844 == 0)
    goto <bb 6>;
  else
    goto <bb 9>;

<bb 6>:
  D.5847 = iw_set_ext (skfd, ifname, 35584, &wrq);
  if (D.5847 < 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.5850 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.3 = stderr;
  stderr.4 = (struct FILE * restrict) stderr.3;
  fprintf (stderr.4, D.5850, "Commit changes", 35584);
  D.5853 = __errno_location ();
  D.5854 = *D.5853;
  D.5855 = strerror (D.5854);
  D.5856 = (const char * restrict) &"    SET failed on device %-1.16s ; %s.\n"[0];
  stderr.5 = stderr;
  stderr.6 = (struct FILE * restrict) stderr.5;
  fprintf (stderr.6, D.5856, ifname, D.5855);
  D.5839 = -5;
  goto <bb 314>;

<bb 8>:
  // predicted unlikely by continue predictor.
  goto <bb 311>;

<bb 9>:
  D.5861 = (long unsigned int) i;
  D.5862 = D.5861 * 8;
  D.5863 = args + D.5862;
  D.5864 = *D.5863;
  D.5865 = strcasecmp (D.5864, "nwid");
  if (D.5865 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;

<bb 10>:
  D.5867 = (long unsigned int) i;
  D.5868 = D.5867 * 8;
  D.5869 = args + D.5868;
  D.5870 = *D.5869;
  D.5871 = strcasecmp (D.5870, "domain");
  if (D.5871 == 0)
    goto <bb 11>;
  else
    goto <bb 26>;

<bb 11>:
  i = i + 1;
  if (i >= count)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  D.5874 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.7 = stderr;
  stderr.8 = (struct FILE * restrict) stderr.7;
  fprintf (stderr.8, D.5874, "Set NWID", 35586);
  stderr.9 = stderr;
  stderr.10 = (struct FILE * restrict) stderr.9;
  D.5879 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.5879, 1, 23, stderr.10);
  D.5839 = -1;
  goto <bb 314>;

<bb 13>:
  D.5883 = (long unsigned int) i;
  D.5884 = D.5883 * 8;
  D.5885 = args + D.5884;
  D.5886 = *D.5885;
  D.5887 = strcasecmp (D.5886, "off");
  if (D.5887 == 0)
    goto <bb 15>;
  else
    goto <bb 14>;

<bb 14>:
  D.5889 = (long unsigned int) i;
  D.5890 = D.5889 * 8;
  D.5891 = args + D.5890;
  D.5892 = *D.5891;
  D.5893 = strcasecmp (D.5892, "any");
  if (D.5893 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  wrq.u.nwid.disabled = 1;
  goto <bb 23>;

<bb 16>:
  D.5894 = (long unsigned int) i;
  D.5895 = D.5894 * 8;
  D.5896 = args + D.5895;
  D.5897 = *D.5896;
  D.5898 = strcasecmp (D.5897, "on");
  if (D.5898 == 0)
    goto <bb 17>;
  else
    goto <bb 20>;

<bb 17>:
  D.5901 = iw_get_ext (skfd, ifname, 35587, &wrq);
  if (D.5901 < 0)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  D.5904 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.11 = stderr;
  stderr.12 = (struct FILE * restrict) stderr.11;
  fprintf (stderr.12, D.5904, "Set NWID", 35587);
  D.5907 = __errno_location ();
  D.5908 = *D.5907;
  D.5909 = strerror (D.5908);
  D.5910 = (const char * restrict) &"    GET failed on device %-1.16s ; %s.\n"[0];
  stderr.13 = stderr;
  stderr.14 = (struct FILE * restrict) stderr.13;
  fprintf (stderr.14, D.5910, ifname, D.5909);
  D.5839 = -6;
  goto <bb 314>;

<bb 19>:
  wrq.u.nwid.disabled = 0;
  goto <bb 23>;

<bb 20>:
  D.5914 = (const char * restrict) &"%lX"[0];
  D.5915 = (long unsigned int) i;
  D.5916 = D.5915 * 8;
  D.5917 = args + D.5916;
  D.5918 = *D.5917;
  D.5919 = (const char * restrict) D.5918;
  D.5920 = sscanf (D.5919, D.5914, &wrq.u.nwid.value);
  if (D.5920 != 1)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  D.5923 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.15 = stderr;
  stderr.16 = (struct FILE * restrict) stderr.15;
  fprintf (stderr.16, D.5923, "Set NWID", 35586);
  D.5926 = (long unsigned int) i;
  D.5927 = D.5926 * 8;
  D.5928 = args + D.5927;
  D.5929 = *D.5928;
  D.5930 = (const char * restrict) &"    invalid argument \"%s\".\n"[0];
  stderr.17 = stderr;
  stderr.18 = (struct FILE * restrict) stderr.17;
  fprintf (stderr.18, D.5930, D.5929);
  D.5839 = -2;
  goto <bb 314>;

<bb 22>:
  wrq.u.nwid.disabled = 0;

<bb 23>:
  wrq.u.nwid.fixed = 1;
  D.5933 = iw_set_ext (skfd, ifname, 35586, &wrq);
  if (D.5933 < 0)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  D.5936 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.19 = stderr;
  stderr.20 = (struct FILE * restrict) stderr.19;
  fprintf (stderr.20, D.5936, "Set NWID", 35586);
  D.5939 = __errno_location ();
  D.5940 = *D.5939;
  D.5941 = strerror (D.5940);
  D.5942 = (const char * restrict) &"    SET failed on device %-1.16s ; %s.\n"[0];
  stderr.21 = stderr;
  stderr.22 = (struct FILE * restrict) stderr.21;
  fprintf (stderr.22, D.5942, ifname, D.5941);
  D.5839 = -5;
  goto <bb 314>;

<bb 25>:
  // predicted unlikely by continue predictor.
  goto <bb 311>;

<bb 26>:
  D.5947 = (long unsigned int) i;
  D.5948 = D.5947 * 8;
  D.5949 = args + D.5948;
  D.5950 = *D.5949;
  D.5951 = strncmp (D.5950, "freq", 4);
  if (D.5951 == 0)
    goto <bb 28>;
  else
    goto <bb 27>;

<bb 27>:
  D.5953 = (long unsigned int) i;
  D.5954 = D.5953 * 8;
  D.5955 = args + D.5954;
  D.5956 = *D.5955;
  D.5957 = strcmp (D.5956, "channel");
  if (D.5957 == 0)
    goto <bb 28>;
  else
    goto <bb 41>;

<bb 28>:
  i = i + 1;
  if (i >= count)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  D.5960 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.23 = stderr;
  stderr.24 = (struct FILE * restrict) stderr.23;
  fprintf (stderr.24, D.5960, "Set Frequency", 35588);
  stderr.25 = stderr;
  stderr.26 = (struct FILE * restrict) stderr.25;
  D.5965 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.5965, 1, 23, stderr.26);
  D.5839 = -1;
  goto <bb 314>;

<bb 30>:
  D.5966 = (const char * restrict) &"%lg"[0];
  D.5967 = (long unsigned int) i;
  D.5968 = D.5967 * 8;
  D.5969 = args + D.5968;
  D.5970 = *D.5969;
  D.5971 = (const char * restrict) D.5970;
  D.5972 = sscanf (D.5971, D.5966, &freq);
  if (D.5972 != 1)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  D.5975 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.27 = stderr;
  stderr.28 = (struct FILE * restrict) stderr.27;
  fprintf (stderr.28, D.5975, "Set Frequency", 35588);
  D.5978 = (long unsigned int) i;
  D.5979 = D.5978 * 8;
  D.5980 = args + D.5979;
  D.5981 = *D.5980;
  D.5982 = (const char * restrict) &"    invalid argument \"%s\".\n"[0];
  stderr.29 = stderr;
  stderr.30 = (struct FILE * restrict) stderr.29;
  fprintf (stderr.30, D.5982, D.5981);
  D.5839 = -2;
  goto <bb 314>;

<bb 32>:
  D.5985 = (long unsigned int) i;
  D.5986 = D.5985 * 8;
  D.5987 = args + D.5986;
  D.5988 = *D.5987;
  D.5989 = index (D.5988, 71);
  if (D.5989 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  freq.31 = freq;
  freq.32 = freq.31 * 1.0e+9;
  freq = freq.32;

<bb 34>:
  D.5994 = (long unsigned int) i;
  D.5995 = D.5994 * 8;
  D.5996 = args + D.5995;
  D.5997 = *D.5996;
  D.5998 = index (D.5997, 77);
  if (D.5998 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  freq.33 = freq;
  freq.34 = freq.33 * 1.0e+6;
  freq = freq.34;

<bb 36>:
  D.6003 = (long unsigned int) i;
  D.6004 = D.6003 * 8;
  D.6005 = args + D.6004;
  D.6006 = *D.6005;
  D.6007 = index (D.6006, 107);
  if (D.6007 != 0B)
    goto <bb 37>;
  else
    goto <bb 38>;

<bb 37>:
  freq.35 = freq;
  freq.36 = freq.35 * 1.0e+3;
  freq = freq.36;

<bb 38>:
  freq.37 = freq;
  iw_float2freq (freq.37, &wrq.u.freq);
  D.6013 = iw_set_ext (skfd, ifname, 35588, &wrq);
  if (D.6013 < 0)
    goto <bb 39>;
  else
    goto <bb 40>;

<bb 39>:
  D.6016 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.38 = stderr;
  stderr.39 = (struct FILE * restrict) stderr.38;
  fprintf (stderr.39, D.6016, "Set Frequency", 35588);
  D.6019 = __errno_location ();
  D.6020 = *D.6019;
  D.6021 = strerror (D.6020);
  D.6022 = (const char * restrict) &"    SET failed on device %-1.16s ; %s.\n"[0];
  stderr.40 = stderr;
  stderr.41 = (struct FILE * restrict) stderr.40;
  fprintf (stderr.41, D.6022, ifname, D.6021);
  D.5839 = -5;
  goto <bb 314>;

<bb 40>:
  // predicted unlikely by continue predictor.
  goto <bb 311>;

<bb 41>:
  D.6025 = (long unsigned int) i;
  D.6026 = D.6025 * 8;
  D.6027 = args + D.6026;
  D.6028 = *D.6027;
  D.6029 = strncmp (D.6028, "sens", 4);
  if (D.6029 == 0)
    goto <bb 42>;
  else
    goto <bb 49>;

<bb 42>:
  i = i + 1;
  if (i >= count)
    goto <bb 43>;
  else
    goto <bb 44>;

<bb 43>:
  D.6034 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.42 = stderr;
  stderr.43 = (struct FILE * restrict) stderr.42;
  fprintf (stderr.43, D.6034, "Set Sensitivity", 35592);
  stderr.44 = stderr;
  stderr.45 = (struct FILE * restrict) stderr.44;
  D.6039 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.6039, 1, 23, stderr.45);
  D.5839 = -1;
  goto <bb 314>;

<bb 44>:
  D.6040 = (const char * restrict) &"%i"[0];
  D.6041 = (long unsigned int) i;
  D.6042 = D.6041 * 8;
  D.6043 = args + D.6042;
  D.6044 = *D.6043;
  D.6045 = (const char * restrict) D.6044;
  D.6046 = sscanf (D.6045, D.6040, &wrq.u.sens.value);
  if (D.6046 != 1)
    goto <bb 45>;
  else
    goto <bb 46>;

<bb 45>:
  D.6049 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.46 = stderr;
  stderr.47 = (struct FILE * restrict) stderr.46;
  fprintf (stderr.47, D.6049, "Set Sensitivity", 35592);
  D.6052 = (long unsigned int) i;
  D.6053 = D.6052 * 8;
  D.6054 = args + D.6053;
  D.6055 = *D.6054;
  D.6056 = (const char * restrict) &"    invalid argument \"%s\".\n"[0];
  stderr.48 = stderr;
  stderr.49 = (struct FILE * restrict) stderr.48;
  fprintf (stderr.49, D.6056, D.6055);
  D.5839 = -2;
  goto <bb 314>;

<bb 46>:
  D.6059 = iw_set_ext (skfd, ifname, 35592, &wrq);
  if (D.6059 < 0)
    goto <bb 47>;
  else
    goto <bb 48>;

<bb 47>:
  D.6062 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.50 = stderr;
  stderr.51 = (struct FILE * restrict) stderr.50;
  fprintf (stderr.51, D.6062, "Set Sensitivity", 35592);
  D.6065 = __errno_location ();
  D.6066 = *D.6065;
  D.6067 = strerror (D.6066);
  D.6068 = (const char * restrict) &"    SET failed on device %-1.16s ; %s.\n"[0];
  stderr.52 = stderr;
  stderr.53 = (struct FILE * restrict) stderr.52;
  fprintf (stderr.53, D.6068, ifname, D.6067);
  D.5839 = -5;
  goto <bb 314>;

<bb 48>:
  // predicted unlikely by continue predictor.
  goto <bb 311>;

<bb 49>:
  D.6073 = (long unsigned int) i;
  D.6074 = D.6073 * 8;
  D.6075 = args + D.6074;
  D.6076 = *D.6075;
  D.6077 = strncmp (D.6076, "enc", 3);
  if (D.6077 == 0)
    goto <bb 51>;
  else
    goto <bb 50>;

<bb 50>:
  D.6079 = (long unsigned int) i;
  D.6080 = D.6079 * 8;
  D.6081 = args + D.6080;
  D.6082 = *D.6081;
  D.6083 = strcmp (D.6082, "key");
  if (D.6083 == 0)
    goto <bb 51>;
  else
    goto <bb 87>;

<bb 51>:
  i = i + 1;
  if (i >= count)
    goto <bb 52>;
  else
    goto <bb 53>;

<bb 52>:
  D.6086 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.54 = stderr;
  stderr.55 = (struct FILE * restrict) stderr.54;
  fprintf (stderr.55, D.6086, "Set Encode", 35626);
  stderr.56 = stderr;
  stderr.57 = (struct FILE * restrict) stderr.56;
  D.6091 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.6091, 1, 23, stderr.57);
  D.5839 = -1;
  goto <bb 314>;

<bb 53>:
  D.6092 = (long unsigned int) i;
  D.6093 = D.6092 * 8;
  D.6094 = args + D.6093;
  D.6095 = *D.6094;
  D.6096 = strcasecmp (D.6095, "on");
  if (D.6096 == 0)
    goto <bb 54>;
  else
    goto <bb 57>;

<bb 54>:
  wrq.u.data.pointer = &key;
  wrq.u.data.length = 64;
  wrq.u.data.flags = 0;
  D.6099 = iw_get_ext (skfd, ifname, 35627, &wrq);
  if (D.6099 < 0)
    goto <bb 55>;
  else
    goto <bb 56>;

<bb 55>:
  D.6102 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.58 = stderr;
  stderr.59 = (struct FILE * restrict) stderr.58;
  fprintf (stderr.59, D.6102, "Set Encode", 35627);
  D.6105 = __errno_location ();
  D.6106 = *D.6105;
  D.6107 = strerror (D.6106);
  D.6108 = (const char * restrict) &"    GET failed on device %-1.16s ; %s.\n"[0];
  stderr.60 = stderr;
  stderr.61 = (struct FILE * restrict) stderr.60;
  fprintf (stderr.61, D.6108, ifname, D.6107);
  D.5839 = -6;
  goto <bb 314>;

<bb 56>:
  D.6111 = wrq.u.data.flags;
  D.6112 = D.6111 & 32767;
  wrq.u.data.flags = D.6112;
  goto <bb 84>;

<bb 57>:
  gotone = 0;
  wrq.u.data.pointer = 0B;
  wrq.u.data.flags = 0;
  wrq.u.data.length = 0;

<bb 58>:
  oldone = gotone;
  if (i < count)
    goto <bb 59>;
  else
    goto <bb 61>;

<bb 59>:
  D.6116 = (long unsigned int) i;
  D.6117 = D.6116 * 8;
  D.6118 = args + D.6117;
  D.6119 = *D.6118;
  keylen = iw_in_key_full (skfd, ifname, D.6119, &key, &wrq.u.data.flags);
  if (keylen > 0)
    goto <bb 60>;
  else
    goto <bb 61>;

<bb 60>:
  D.6122 = (__u16) keylen;
  wrq.u.data.length = D.6122;
  wrq.u.data.pointer = &key;
  i = i + 1;
  gotone = gotone + 1;

<bb 61>:
  if (i < count)
    goto <bb 62>;
  else
    goto <bb 66>;

<bb 62>:
  D.6125 = (const char * restrict) &"[%i]"[0];
  D.6126 = (long unsigned int) i;
  D.6127 = D.6126 * 8;
  D.6128 = args + D.6127;
  D.6129 = *D.6128;
  D.6130 = (const char * restrict) D.6129;
  D.6131 = sscanf (D.6130, D.6125, &temp);
  if (D.6131 == 1)
    goto <bb 63>;
  else
    goto <bb 66>;

<bb 63>:
  temp.62 = temp;
  if (temp.62 > 0)
    goto <bb 64>;
  else
    goto <bb 66>;

<bb 64>:
  temp.63 = temp;
  if (temp.63 <= 254)
    goto <bb 65>;
  else
    goto <bb 66>;

<bb 65>:
  D.6140 = wrq.u.encoding.flags;
  D.6141 = (short int) D.6140;
  temp.64 = temp;
  D.6143 = (short int) temp.64;
  D.6144 = D.6141 | D.6143;
  D.6145 = (__u16) D.6144;
  wrq.u.encoding.flags = D.6145;
  i = i + 1;
  gotone = gotone + 1;

<bb 66>:
  if (i < count)
    goto <bb 67>;
  else
    goto <bb 69>;

<bb 67>:
  D.6148 = (long unsigned int) i;
  D.6149 = D.6148 * 8;
  D.6150 = args + D.6149;
  D.6151 = *D.6150;
  D.6152 = strcasecmp (D.6151, "off");
  if (D.6152 == 0)
    goto <bb 68>;
  else
    goto <bb 69>;

<bb 68>:
  D.6155 = wrq.u.data.flags;
  D.6156 = D.6155 | 32768;
  wrq.u.data.flags = D.6156;
  i = i + 1;
  gotone = gotone + 1;

<bb 69>:
  if (i < count)
    goto <bb 70>;
  else
    goto <bb 72>;

<bb 70>:
  D.6159 = (long unsigned int) i;
  D.6160 = D.6159 * 8;
  D.6161 = args + D.6160;
  D.6162 = *D.6161;
  D.6163 = strcasecmp (D.6162, "open");
  if (D.6163 == 0)
    goto <bb 71>;
  else
    goto <bb 72>;

<bb 71>:
  D.6166 = wrq.u.data.flags;
  D.6167 = D.6166 | 8192;
  wrq.u.data.flags = D.6167;
  i = i + 1;
  gotone = gotone + 1;

<bb 72>:
  if (i < count)
    goto <bb 73>;
  else
    goto <bb 75>;

<bb 73>:
  D.6170 = (long unsigned int) i;
  D.6171 = D.6170 * 8;
  D.6172 = args + D.6171;
  D.6173 = *D.6172;
  D.6174 = strncasecmp (D.6173, "restricted", 5);
  if (D.6174 == 0)
    goto <bb 74>;
  else
    goto <bb 75>;

<bb 74>:
  D.6177 = wrq.u.data.flags;
  D.6178 = D.6177 | 16384;
  wrq.u.data.flags = D.6178;
  i = i + 1;
  gotone = gotone + 1;

<bb 75>:
  if (i < count)
    goto <bb 76>;
  else
    goto <bb 78>;

<bb 76>:
  D.6181 = (long unsigned int) i;
  D.6182 = D.6181 * 8;
  D.6183 = args + D.6182;
  D.6184 = *D.6183;
  D.6185 = strncasecmp (D.6184, "temporary", 4);
  if (D.6185 == 0)
    goto <bb 77>;
  else
    goto <bb 78>;

<bb 77>:
  D.6188 = wrq.u.data.flags;
  D.6189 = D.6188 | 1024;
  wrq.u.data.flags = D.6189;
  i = i + 1;
  gotone = gotone + 1;

<bb 78>:
  if (gotone != oldone)
    goto <bb 58>;
  else
    goto <bb 79>;

<bb 79>:
  D.6190 = wrq.u.data.pointer;
  if (D.6190 == 0B)
    goto <bb 80>;
  else
    goto <bb 81>;

<bb 80>:
  D.6193 = wrq.u.data.flags;
  D.6194 = D.6193 | 2048;
  wrq.u.data.flags = D.6194;

<bb 81>:
  if (gotone == 0)
    goto <bb 82>;
  else
    goto <bb 83>;

<bb 82>:
  D.6197 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.65 = stderr;
  stderr.66 = (struct FILE * restrict) stderr.65;
  fprintf (stderr.66, D.6197, "Set Encode", 35626);
  D.6200 = (long unsigned int) i;
  D.6201 = D.6200 * 8;
  D.6202 = args + D.6201;
  D.6203 = *D.6202;
  D.6204 = (const char * restrict) &"    invalid argument \"%s\".\n"[0];
  stderr.67 = stderr;
  stderr.68 = (struct FILE * restrict) stderr.67;
  fprintf (stderr.68, D.6204, D.6203);
  D.5839 = -2;
  goto <bb 314>;

<bb 83>:
  i = i - 1;

<bb 84>:
  D.6207 = iw_set_ext (skfd, ifname, 35626, &wrq);
  if (D.6207 < 0)
    goto <bb 85>;
  else
    goto <bb 86>;

<bb 85>:
  D.6210 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.69 = stderr;
  stderr.70 = (struct FILE * restrict) stderr.69;
  fprintf (stderr.70, D.6210, "Set Encode", 35626);
  D.6213 = __errno_location ();
  D.6214 = *D.6213;
  D.6215 = strerror (D.6214);
  D.6216 = (const char * restrict) &"    SET failed on device %-1.16s ; %s.\n"[0];
  stderr.71 = stderr;
  stderr.72 = (struct FILE * restrict) stderr.71;
  fprintf (stderr.72, D.6216, ifname, D.6215);
  D.5839 = -5;
  goto <bb 314>;

<bb 86>:
  // predicted unlikely by continue predictor.
  goto <bb 311>;

<bb 87>:
  D.6219 = (long unsigned int) i;
  D.6220 = D.6219 * 8;
  D.6221 = args + D.6220;
  D.6222 = *D.6221;
  D.6223 = strcasecmp (D.6222, "essid");
  if (D.6223 == 0)
    goto <bb 88>;
  else
    goto <bb 110>;

<bb 88>:
  i = i + 1;
  if (i >= count)
    goto <bb 89>;
  else
    goto <bb 90>;

<bb 89>:
  D.6228 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.73 = stderr;
  stderr.74 = (struct FILE * restrict) stderr.73;
  fprintf (stderr.74, D.6228, "Set ESSID", 35610);
  stderr.75 = stderr;
  stderr.76 = (struct FILE * restrict) stderr.75;
  D.6233 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.6233, 1, 23, stderr.76);
  D.5839 = -1;
  goto <bb 314>;

<bb 90>:
  D.6237 = (long unsigned int) i;
  D.6238 = D.6237 * 8;
  D.6239 = args + D.6238;
  D.6240 = *D.6239;
  D.6241 = strcasecmp (D.6240, "off");
  if (D.6241 == 0)
    goto <bb 92>;
  else
    goto <bb 91>;

<bb 91>:
  D.6243 = (long unsigned int) i;
  D.6244 = D.6243 * 8;
  D.6245 = args + D.6244;
  D.6246 = *D.6245;
  D.6247 = strcasecmp (D.6246, "any");
  if (D.6247 == 0)
    goto <bb 92>;
  else
    goto <bb 93>;

<bb 92>:
  wrq.u.essid.flags = 0;
  essid[0] = 0;
  goto <bb 107>;

<bb 93>:
  D.6248 = (long unsigned int) i;
  D.6249 = D.6248 * 8;
  D.6250 = args + D.6249;
  D.6251 = *D.6250;
  D.6252 = strcasecmp (D.6251, "on");
  if (D.6252 == 0)
    goto <bb 94>;
  else
    goto <bb 97>;

<bb 94>:
  wrq.u.essid.pointer = &essid;
  wrq.u.essid.length = 33;
  wrq.u.essid.flags = 0;
  D.6255 = iw_get_ext (skfd, ifname, 35611, &wrq);
  if (D.6255 < 0)
    goto <bb 95>;
  else
    goto <bb 96>;

<bb 95>:
  D.6258 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.77 = stderr;
  stderr.78 = (struct FILE * restrict) stderr.77;
  fprintf (stderr.78, D.6258, "Set ESSID", 35611);
  D.6261 = __errno_location ();
  D.6262 = *D.6261;
  D.6263 = strerror (D.6262);
  D.6264 = (const char * restrict) &"    GET failed on device %-1.16s ; %s.\n"[0];
  stderr.79 = stderr;
  stderr.80 = (struct FILE * restrict) stderr.79;
  fprintf (stderr.80, D.6264, ifname, D.6263);
  D.5839 = -6;
  goto <bb 314>;

<bb 96>:
  wrq.u.essid.flags = 1;
  goto <bb 107>;

<bb 97>:
  D.6268 = (long unsigned int) i;
  D.6269 = D.6268 * 8;
  D.6270 = args + D.6269;
  D.6271 = *D.6270;
  D.6272 = strcmp (D.6271, "-");
  if (D.6272 == 0)
    goto <bb 98>;
  else
    goto <bb 100>;

<bb 98>:
  i = i + 1;
  if (i >= count)
    goto <bb 99>;
  else
    goto <bb 100>;

<bb 99>:
  D.6277 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.81 = stderr;
  stderr.82 = (struct FILE * restrict) stderr.81;
  fprintf (stderr.82, D.6277, "Set ESSID", 35610);
  stderr.83 = stderr;
  stderr.84 = (struct FILE * restrict) stderr.83;
  D.6282 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.6282, 1, 23, stderr.84);
  D.5839 = -1;
  goto <bb 314>;

<bb 100>:
  D.6283 = (long unsigned int) i;
  D.6284 = D.6283 * 8;
  D.6285 = args + D.6284;
  D.6286 = *D.6285;
  D.6287 = strlen (D.6286);
  if (D.6287 > 32)
    goto <bb 101>;
  else
    goto <bb 102>;

<bb 101>:
  D.6290 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.85 = stderr;
  stderr.86 = (struct FILE * restrict) stderr.85;
  fprintf (stderr.86, D.6290, "Set ESSID", 35610);
  D.6293 = (const char * restrict) &"    argument too big (max %d)\n"[0];
  stderr.87 = stderr;
  stderr.88 = (struct FILE * restrict) stderr.87;
  fprintf (stderr.88, D.6293, 32);
  D.5839 = -3;
  goto <bb 314>;

<bb 102>:
  wrq.u.essid.flags = 1;
  D.6296 = (long unsigned int) i;
  D.6297 = D.6296 * 8;
  D.6298 = args + D.6297;
  D.6299 = *D.6298;
  D.6300 = (const char * restrict) D.6299;
  strcpy (&essid, D.6300);
  D.6301 = i + 1;
  if (D.6301 < count)
    goto <bb 103>;
  else
    goto <bb 107>;

<bb 103>:
  D.6304 = (const char * restrict) &"[%i]"[0];
  D.6305 = (long unsigned int) i;
  D.6306 = D.6305 + 1;
  D.6307 = D.6306 * 8;
  D.6308 = args + D.6307;
  D.6309 = *D.6308;
  D.6310 = (const char * restrict) D.6309;
  D.6311 = sscanf (D.6310, D.6304, &temp);
  if (D.6311 == 1)
    goto <bb 104>;
  else
    goto <bb 107>;

<bb 104>:
  temp.89 = temp;
  if (temp.89 > 0)
    goto <bb 105>;
  else
    goto <bb 107>;

<bb 105>:
  temp.90 = temp;
  if (temp.90 <= 254)
    goto <bb 106>;
  else
    goto <bb 107>;

<bb 106>:
  temp.91 = temp;
  D.6321 = (__u16) temp.91;
  wrq.u.essid.flags = D.6321;
  i = i + 1;

<bb 107>:
  wrq.u.essid.pointer = &essid;
  D.6322 = strlen (&essid);
  D.6323 = (__u16) D.6322;
  D.6324 = D.6323 + 1;
  wrq.u.essid.length = D.6324;
  D.6325 = iw_set_ext (skfd, ifname, 35610, &wrq);
  if (D.6325 < 0)
    goto <bb 108>;
  else
    goto <bb 109>;

<bb 108>:
  D.6328 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.92 = stderr;
  stderr.93 = (struct FILE * restrict) stderr.92;
  fprintf (stderr.93, D.6328, "Set ESSID", 35610);
  D.6331 = __errno_location ();
  D.6332 = *D.6331;
  D.6333 = strerror (D.6332);
  D.6334 = (const char * restrict) &"    SET failed on device %-1.16s ; %s.\n"[0];
  stderr.94 = stderr;
  stderr.95 = (struct FILE * restrict) stderr.94;
  fprintf (stderr.95, D.6334, ifname, D.6333);
  D.5839 = -5;
  goto <bb 314>;

<bb 109>:
  // predicted unlikely by continue predictor.
  goto <bb 311>;

<bb 110>:
  D.6337 = (long unsigned int) i;
  D.6338 = D.6337 * 8;
  D.6339 = args + D.6338;
  D.6340 = *D.6339;
  D.6341 = strcasecmp (D.6340, "ap");
  if (D.6341 == 0)
    goto <bb 111>;
  else
    goto <bb 123>;

<bb 111>:
  i = i + 1;
  if (i >= count)
    goto <bb 112>;
  else
    goto <bb 113>;

<bb 112>:
  D.6346 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.96 = stderr;
  stderr.97 = (struct FILE * restrict) stderr.96;
  fprintf (stderr.97, D.6346, "Set AP Address", 35604);
  stderr.98 = stderr;
  stderr.99 = (struct FILE * restrict) stderr.98;
  D.6351 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.6351, 1, 23, stderr.99);
  D.5839 = -1;
  goto <bb 314>;

<bb 113>:
  D.6355 = (long unsigned int) i;
  D.6356 = D.6355 * 8;
  D.6357 = args + D.6356;
  D.6358 = *D.6357;
  D.6359 = strcasecmp (D.6358, "auto");
  if (D.6359 == 0)
    goto <bb 115>;
  else
    goto <bb 114>;

<bb 114>:
  D.6361 = (long unsigned int) i;
  D.6362 = D.6361 * 8;
  D.6363 = args + D.6362;
  D.6364 = *D.6363;
  D.6365 = strcasecmp (D.6364, "any");
  if (D.6365 == 0)
    goto <bb 115>;
  else
    goto <bb 116>;

<bb 115>:
  iw_broad_ether (&wrq.u.ap_addr);
  goto <bb 120>;

<bb 116>:
  D.6366 = (long unsigned int) i;
  D.6367 = D.6366 * 8;
  D.6368 = args + D.6367;
  D.6369 = *D.6368;
  D.6370 = strcasecmp (D.6369, "off");
  if (D.6370 == 0)
    goto <bb 117>;
  else
    goto <bb 118>;

<bb 117>:
  iw_null_ether (&wrq.u.ap_addr);
  goto <bb 120>;

<bb 118>:
  D.6374 = (long unsigned int) i;
  D.6375 = D.6374 * 8;
  D.6376 = args + D.6375;
  D.6377 = *D.6376;
  i = i + 1;
  D.6378 = iw_in_addr (skfd, ifname, D.6377, &wrq.u.ap_addr);
  if (D.6378 < 0)
    goto <bb 119>;
  else
    goto <bb 120>;

<bb 119>:
  D.6381 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.100 = stderr;
  stderr.101 = (struct FILE * restrict) stderr.100;
  fprintf (stderr.101, D.6381, "Set AP Address", 35604);
  D.6384 = (long unsigned int) i;
  D.6385 = D.6384 + -1;
  D.6386 = D.6385 * 8;
  D.6387 = args + D.6386;
  D.6388 = *D.6387;
  D.6389 = (const char * restrict) &"    invalid argument \"%s\".\n"[0];
  stderr.102 = stderr;
  stderr.103 = (struct FILE * restrict) stderr.102;
  fprintf (stderr.103, D.6389, D.6388);
  D.5839 = -2;
  goto <bb 314>;

<bb 120>:
  D.6392 = iw_set_ext (skfd, ifname, 35604, &wrq);
  if (D.6392 < 0)
    goto <bb 121>;
  else
    goto <bb 122>;

<bb 121>:
  D.6395 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.104 = stderr;
  stderr.105 = (struct FILE * restrict) stderr.104;
  fprintf (stderr.105, D.6395, "Set AP Address", 35604);
  D.6398 = __errno_location ();
  D.6399 = *D.6398;
  D.6400 = strerror (D.6399);
  D.6401 = (const char * restrict) &"    SET failed on device %-1.16s ; %s.\n"[0];
  stderr.106 = stderr;
  stderr.107 = (struct FILE * restrict) stderr.106;
  fprintf (stderr.107, D.6401, ifname, D.6400);
  D.5839 = -5;
  goto <bb 314>;

<bb 122>:
  // predicted unlikely by continue predictor.
  goto <bb 311>;

<bb 123>:
  D.6404 = (long unsigned int) i;
  D.6405 = D.6404 * 8;
  D.6406 = args + D.6405;
  D.6407 = *D.6406;
  D.6408 = strncmp (D.6407, "nick", 4);
  if (D.6408 == 0)
    goto <bb 124>;
  else
    goto <bb 131>;

<bb 124>:
  i = i + 1;
  if (i >= count)
    goto <bb 125>;
  else
    goto <bb 126>;

<bb 125>:
  D.6413 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.108 = stderr;
  stderr.109 = (struct FILE * restrict) stderr.108;
  fprintf (stderr.109, D.6413, "Set Nickname", 35612);
  stderr.110 = stderr;
  stderr.111 = (struct FILE * restrict) stderr.110;
  D.6418 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.6418, 1, 23, stderr.111);
  D.5839 = -1;
  goto <bb 314>;

<bb 126>:
  D.6419 = (long unsigned int) i;
  D.6420 = D.6419 * 8;
  D.6421 = args + D.6420;
  D.6422 = *D.6421;
  D.6423 = strlen (D.6422);
  if (D.6423 > 32)
    goto <bb 127>;
  else
    goto <bb 128>;

<bb 127>:
  D.6426 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.112 = stderr;
  stderr.113 = (struct FILE * restrict) stderr.112;
  fprintf (stderr.113, D.6426, "Set Nickname", 35612);
  D.6429 = (const char * restrict) &"    argument too big (max %d)\n"[0];
  stderr.114 = stderr;
  stderr.115 = (struct FILE * restrict) stderr.114;
  fprintf (stderr.115, D.6429, 32);
  D.5839 = -3;
  goto <bb 314>;

<bb 128>:
  D.6432 = (long unsigned int) i;
  D.6433 = D.6432 * 8;
  D.6434 = args + D.6433;
  D.6435 = *D.6434;
  wrq.u.essid.pointer = D.6435;
  D.6436 = (long unsigned int) i;
  D.6437 = D.6436 * 8;
  D.6438 = args + D.6437;
  D.6439 = *D.6438;
  D.6440 = strlen (D.6439);
  D.6441 = (__u16) D.6440;
  D.6442 = D.6441 + 1;
  wrq.u.essid.length = D.6442;
  D.6443 = iw_set_ext (skfd, ifname, 35612, &wrq);
  if (D.6443 < 0)
    goto <bb 129>;
  else
    goto <bb 130>;

<bb 129>:
  D.6446 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.116 = stderr;
  stderr.117 = (struct FILE * restrict) stderr.116;
  fprintf (stderr.117, D.6446, "Set Nickname", 35612);
  D.6449 = __errno_location ();
  D.6450 = *D.6449;
  D.6451 = strerror (D.6450);
  D.6452 = (const char * restrict) &"    SET failed on device %-1.16s ; %s.\n"[0];
  stderr.118 = stderr;
  stderr.119 = (struct FILE * restrict) stderr.118;
  fprintf (stderr.119, D.6452, ifname, D.6451);
  D.5839 = -5;
  goto <bb 314>;

<bb 130>:
  // predicted unlikely by continue predictor.
  goto <bb 311>;

<bb 131>:
  D.6457 = (long unsigned int) i;
  D.6458 = D.6457 * 8;
  D.6459 = args + D.6458;
  D.6460 = *D.6459;
  D.6461 = strncmp (D.6460, "bit", 3);
  if (D.6461 == 0)
    goto <bb 133>;
  else
    goto <bb 132>;

<bb 132>:
  D.6463 = (long unsigned int) i;
  D.6464 = D.6463 * 8;
  D.6465 = args + D.6464;
  D.6466 = *D.6465;
  D.6467 = strcmp (D.6466, "rate");
  if (D.6467 == 0)
    goto <bb 133>;
  else
    goto <bb 158>;

<bb 133>:
  i = i + 1;
  if (i >= count)
    goto <bb 134>;
  else
    goto <bb 135>;

<bb 134>:
  D.6470 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.120 = stderr;
  stderr.121 = (struct FILE * restrict) stderr.120;
  fprintf (stderr.121, D.6470, "Set Bit Rate", 35616);
  stderr.122 = stderr;
  stderr.123 = (struct FILE * restrict) stderr.122;
  D.6475 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.6475, 1, 23, stderr.123);
  D.5839 = -1;
  goto <bb 314>;

<bb 135>:
  D.6476 = (long unsigned int) i;
  D.6477 = D.6476 * 8;
  D.6478 = args + D.6477;
  D.6479 = *D.6478;
  D.6480 = strcasecmp (D.6479, "auto");
  if (D.6480 == 0)
    goto <bb 136>;
  else
    goto <bb 137>;

<bb 136>:
  wrq.u.bitrate.value = -1;
  wrq.u.bitrate.fixed = 0;
  goto <bb 155>;

<bb 137>:
  D.6484 = (long unsigned int) i;
  D.6485 = D.6484 * 8;
  D.6486 = args + D.6485;
  D.6487 = *D.6486;
  D.6488 = strcasecmp (D.6487, "fixed");
  if (D.6488 == 0)
    goto <bb 138>;
  else
    goto <bb 141>;

<bb 138>:
  D.6491 = iw_get_ext (skfd, ifname, 35617, &wrq);
  if (D.6491 < 0)
    goto <bb 139>;
  else
    goto <bb 140>;

<bb 139>:
  D.6494 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.124 = stderr;
  stderr.125 = (struct FILE * restrict) stderr.124;
  fprintf (stderr.125, D.6494, "Set Bit Rate", 35617);
  D.6497 = __errno_location ();
  D.6498 = *D.6497;
  D.6499 = strerror (D.6498);
  D.6500 = (const char * restrict) &"    GET failed on device %-1.16s ; %s.\n"[0];
  stderr.126 = stderr;
  stderr.127 = (struct FILE * restrict) stderr.126;
  fprintf (stderr.127, D.6500, ifname, D.6499);
  D.5839 = -6;
  goto <bb 314>;

<bb 140>:
  wrq.u.bitrate.fixed = 1;
  goto <bb 155>;

<bb 141>:
  D.6504 = (const char * restrict) &"%lg"[0];
  D.6505 = (long unsigned int) i;
  D.6506 = D.6505 * 8;
  D.6507 = args + D.6506;
  D.6508 = *D.6507;
  D.6509 = (const char * restrict) D.6508;
  D.6510 = sscanf (D.6509, D.6504, &brate);
  if (D.6510 != 1)
    goto <bb 142>;
  else
    goto <bb 143>;

<bb 142>:
  D.6513 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.128 = stderr;
  stderr.129 = (struct FILE * restrict) stderr.128;
  fprintf (stderr.129, D.6513, "Set Bit Rate", 35616);
  D.6516 = (long unsigned int) i;
  D.6517 = D.6516 * 8;
  D.6518 = args + D.6517;
  D.6519 = *D.6518;
  D.6520 = (const char * restrict) &"    invalid argument \"%s\".\n"[0];
  stderr.130 = stderr;
  stderr.131 = (struct FILE * restrict) stderr.130;
  fprintf (stderr.131, D.6520, D.6519);
  D.5839 = -2;
  goto <bb 314>;

<bb 143>:
  D.6523 = (long unsigned int) i;
  D.6524 = D.6523 * 8;
  D.6525 = args + D.6524;
  D.6526 = *D.6525;
  D.6527 = index (D.6526, 71);
  if (D.6527 != 0B)
    goto <bb 144>;
  else
    goto <bb 145>;

<bb 144>:
  brate.132 = brate;
  brate.133 = brate.132 * 1.0e+9;
  brate = brate.133;

<bb 145>:
  D.6532 = (long unsigned int) i;
  D.6533 = D.6532 * 8;
  D.6534 = args + D.6533;
  D.6535 = *D.6534;
  D.6536 = index (D.6535, 77);
  if (D.6536 != 0B)
    goto <bb 146>;
  else
    goto <bb 147>;

<bb 146>:
  brate.134 = brate;
  brate.135 = brate.134 * 1.0e+6;
  brate = brate.135;

<bb 147>:
  D.6541 = (long unsigned int) i;
  D.6542 = D.6541 * 8;
  D.6543 = args + D.6542;
  D.6544 = *D.6543;
  D.6545 = index (D.6544, 107);
  if (D.6545 != 0B)
    goto <bb 148>;
  else
    goto <bb 149>;

<bb 148>:
  brate.136 = brate;
  brate.137 = brate.136 * 1.0e+3;
  brate = brate.137;

<bb 149>:
  brate.138 = brate;
  D.6551 = (long int) brate.138;
  D.6552 = (__s32) D.6551;
  wrq.u.bitrate.value = D.6552;
  wrq.u.bitrate.fixed = 1;
  D.6553 = i + 1;
  if (D.6553 < count)
    goto <bb 150>;
  else
    goto <bb 152>;

<bb 150>:
  D.6556 = (long unsigned int) i;
  D.6557 = D.6556 + 1;
  D.6558 = D.6557 * 8;
  D.6559 = args + D.6558;
  D.6560 = *D.6559;
  D.6561 = strcasecmp (D.6560, "auto");
  if (D.6561 == 0)
    goto <bb 151>;
  else
    goto <bb 152>;

<bb 151>:
  wrq.u.bitrate.fixed = 0;
  i = i + 1;

<bb 152>:
  D.6564 = i + 1;
  if (D.6564 < count)
    goto <bb 153>;
  else
    goto <bb 155>;

<bb 153>:
  D.6567 = (long unsigned int) i;
  D.6568 = D.6567 + 1;
  D.6569 = D.6568 * 8;
  D.6570 = args + D.6569;
  D.6571 = *D.6570;
  D.6572 = strcasecmp (D.6571, "fixed");
  if (D.6572 == 0)
    goto <bb 154>;
  else
    goto <bb 155>;

<bb 154>:
  wrq.u.bitrate.fixed = 1;
  i = i + 1;

<bb 155>:
  D.6575 = iw_set_ext (skfd, ifname, 35616, &wrq);
  if (D.6575 < 0)
    goto <bb 156>;
  else
    goto <bb 157>;

<bb 156>:
  D.6578 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.139 = stderr;
  stderr.140 = (struct FILE * restrict) stderr.139;
  fprintf (stderr.140, D.6578, "Set Bit Rate", 35616);
  D.6581 = __errno_location ();
  D.6582 = *D.6581;
  D.6583 = strerror (D.6582);
  D.6584 = (const char * restrict) &"    SET failed on device %-1.16s ; %s.\n"[0];
  stderr.141 = stderr;
  stderr.142 = (struct FILE * restrict) stderr.141;
  fprintf (stderr.142, D.6584, ifname, D.6583);
  D.5839 = -5;
  goto <bb 314>;

<bb 157>:
  // predicted unlikely by continue predictor.
  goto <bb 311>;

<bb 158>:
  D.6587 = (long unsigned int) i;
  D.6588 = D.6587 * 8;
  D.6589 = args + D.6588;
  D.6590 = *D.6589;
  D.6591 = strncasecmp (D.6590, "rts", 3);
  if (D.6591 == 0)
    goto <bb 159>;
  else
    goto <bb 174>;

<bb 159>:
  i = i + 1;
  if (i >= count)
    goto <bb 160>;
  else
    goto <bb 161>;

<bb 160>:
  D.6596 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.143 = stderr;
  stderr.144 = (struct FILE * restrict) stderr.143;
  fprintf (stderr.144, D.6596, "Set RTS Threshold", 35618);
  stderr.145 = stderr;
  stderr.146 = (struct FILE * restrict) stderr.145;
  D.6601 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.6601, 1, 23, stderr.146);
  D.5839 = -1;
  goto <bb 314>;

<bb 161>:
  wrq.u.rts.value = -1;
  wrq.u.rts.fixed = 1;
  wrq.u.rts.disabled = 0;
  D.6602 = (long unsigned int) i;
  D.6603 = D.6602 * 8;
  D.6604 = args + D.6603;
  D.6605 = *D.6604;
  D.6606 = strcasecmp (D.6605, "off");
  if (D.6606 == 0)
    goto <bb 162>;
  else
    goto <bb 163>;

<bb 162>:
  wrq.u.rts.disabled = 1;
  goto <bb 171>;

<bb 163>:
  D.6610 = (long unsigned int) i;
  D.6611 = D.6610 * 8;
  D.6612 = args + D.6611;
  D.6613 = *D.6612;
  D.6614 = strcasecmp (D.6613, "auto");
  if (D.6614 == 0)
    goto <bb 164>;
  else
    goto <bb 165>;

<bb 164>:
  wrq.u.rts.fixed = 0;
  goto <bb 171>;

<bb 165>:
  D.6618 = (long unsigned int) i;
  D.6619 = D.6618 * 8;
  D.6620 = args + D.6619;
  D.6621 = *D.6620;
  D.6622 = strcasecmp (D.6621, "fixed");
  if (D.6622 == 0)
    goto <bb 166>;
  else
    goto <bb 169>;

<bb 166>:
  D.6625 = iw_get_ext (skfd, ifname, 35619, &wrq);
  if (D.6625 < 0)
    goto <bb 167>;
  else
    goto <bb 168>;

<bb 167>:
  D.6628 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.147 = stderr;
  stderr.148 = (struct FILE * restrict) stderr.147;
  fprintf (stderr.148, D.6628, "Set RTS Threshold", 35619);
  D.6631 = __errno_location ();
  D.6632 = *D.6631;
  D.6633 = strerror (D.6632);
  D.6634 = (const char * restrict) &"    GET failed on device %-1.16s ; %s.\n"[0];
  stderr.149 = stderr;
  stderr.150 = (struct FILE * restrict) stderr.149;
  fprintf (stderr.150, D.6634, ifname, D.6633);
  D.5839 = -6;
  goto <bb 314>;

<bb 168>:
  wrq.u.rts.fixed = 1;
  goto <bb 171>;

<bb 169>:
  D.6638 = (const char * restrict) &"%li"[0];
  D.6639 = (long unsigned int) i;
  D.6640 = D.6639 * 8;
  D.6641 = args + D.6640;
  D.6642 = *D.6641;
  D.6643 = (const char * restrict) D.6642;
  D.6644 = sscanf (D.6643, D.6638, &wrq.u.rts.value);
  if (D.6644 != 1)
    goto <bb 170>;
  else
    goto <bb 171>;

<bb 170>:
  D.6647 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.151 = stderr;
  stderr.152 = (struct FILE * restrict) stderr.151;
  fprintf (stderr.152, D.6647, "Set RTS Threshold", 35618);
  D.6650 = (long unsigned int) i;
  D.6651 = D.6650 * 8;
  D.6652 = args + D.6651;
  D.6653 = *D.6652;
  D.6654 = (const char * restrict) &"    invalid argument \"%s\".\n"[0];
  stderr.153 = stderr;
  stderr.154 = (struct FILE * restrict) stderr.153;
  fprintf (stderr.154, D.6654, D.6653);
  D.5839 = -2;
  goto <bb 314>;

<bb 171>:
  D.6657 = iw_set_ext (skfd, ifname, 35618, &wrq);
  if (D.6657 < 0)
    goto <bb 172>;
  else
    goto <bb 173>;

<bb 172>:
  D.6660 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.155 = stderr;
  stderr.156 = (struct FILE * restrict) stderr.155;
  fprintf (stderr.156, D.6660, "Set RTS Threshold", 35618);
  D.6663 = __errno_location ();
  D.6664 = *D.6663;
  D.6665 = strerror (D.6664);
  D.6666 = (const char * restrict) &"    SET failed on device %-1.16s ; %s.\n"[0];
  stderr.157 = stderr;
  stderr.158 = (struct FILE * restrict) stderr.157;
  fprintf (stderr.158, D.6666, ifname, D.6665);
  D.5839 = -5;
  goto <bb 314>;

<bb 173>:
  // predicted unlikely by continue predictor.
  goto <bb 311>;

<bb 174>:
  D.6669 = (long unsigned int) i;
  D.6670 = D.6669 * 8;
  D.6671 = args + D.6670;
  D.6672 = *D.6671;
  D.6673 = strncmp (D.6672, "frag", 4);
  if (D.6673 == 0)
    goto <bb 175>;
  else
    goto <bb 190>;

<bb 175>:
  i = i + 1;
  if (i >= count)
    goto <bb 176>;
  else
    goto <bb 177>;

<bb 176>:
  D.6678 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.159 = stderr;
  stderr.160 = (struct FILE * restrict) stderr.159;
  fprintf (stderr.160, D.6678, "Set Fragmentation Threshold", 35620);
  stderr.161 = stderr;
  stderr.162 = (struct FILE * restrict) stderr.161;
  D.6683 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.6683, 1, 23, stderr.162);
  D.5839 = -1;
  goto <bb 314>;

<bb 177>:
  wrq.u.frag.value = -1;
  wrq.u.frag.fixed = 1;
  wrq.u.frag.disabled = 0;
  D.6684 = (long unsigned int) i;
  D.6685 = D.6684 * 8;
  D.6686 = args + D.6685;
  D.6687 = *D.6686;
  D.6688 = strcasecmp (D.6687, "off");
  if (D.6688 == 0)
    goto <bb 178>;
  else
    goto <bb 179>;

<bb 178>:
  wrq.u.frag.disabled = 1;
  goto <bb 187>;

<bb 179>:
  D.6692 = (long unsigned int) i;
  D.6693 = D.6692 * 8;
  D.6694 = args + D.6693;
  D.6695 = *D.6694;
  D.6696 = strcasecmp (D.6695, "auto");
  if (D.6696 == 0)
    goto <bb 180>;
  else
    goto <bb 181>;

<bb 180>:
  wrq.u.frag.fixed = 0;
  goto <bb 187>;

<bb 181>:
  D.6700 = (long unsigned int) i;
  D.6701 = D.6700 * 8;
  D.6702 = args + D.6701;
  D.6703 = *D.6702;
  D.6704 = strcasecmp (D.6703, "fixed");
  if (D.6704 == 0)
    goto <bb 182>;
  else
    goto <bb 185>;

<bb 182>:
  D.6707 = iw_get_ext (skfd, ifname, 35621, &wrq);
  if (D.6707 < 0)
    goto <bb 183>;
  else
    goto <bb 184>;

<bb 183>:
  D.6710 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.163 = stderr;
  stderr.164 = (struct FILE * restrict) stderr.163;
  fprintf (stderr.164, D.6710, "Set Fragmentation Threshold", 35621);
  D.6713 = __errno_location ();
  D.6714 = *D.6713;
  D.6715 = strerror (D.6714);
  D.6716 = (const char * restrict) &"    GET failed on device %-1.16s ; %s.\n"[0];
  stderr.165 = stderr;
  stderr.166 = (struct FILE * restrict) stderr.165;
  fprintf (stderr.166, D.6716, ifname, D.6715);
  D.5839 = -6;
  goto <bb 314>;

<bb 184>:
  wrq.u.frag.fixed = 1;
  goto <bb 187>;

<bb 185>:
  D.6720 = (const char * restrict) &"%li"[0];
  D.6721 = (long unsigned int) i;
  D.6722 = D.6721 * 8;
  D.6723 = args + D.6722;
  D.6724 = *D.6723;
  D.6725 = (const char * restrict) D.6724;
  D.6726 = sscanf (D.6725, D.6720, &wrq.u.frag.value);
  if (D.6726 != 1)
    goto <bb 186>;
  else
    goto <bb 187>;

<bb 186>:
  D.6729 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.167 = stderr;
  stderr.168 = (struct FILE * restrict) stderr.167;
  fprintf (stderr.168, D.6729, "Set Fragmentation Threshold", 35620);
  D.6732 = (long unsigned int) i;
  D.6733 = D.6732 * 8;
  D.6734 = args + D.6733;
  D.6735 = *D.6734;
  D.6736 = (const char * restrict) &"    invalid argument \"%s\".\n"[0];
  stderr.169 = stderr;
  stderr.170 = (struct FILE * restrict) stderr.169;
  fprintf (stderr.170, D.6736, D.6735);
  D.5839 = -2;
  goto <bb 314>;

<bb 187>:
  D.6739 = iw_set_ext (skfd, ifname, 35620, &wrq);
  if (D.6739 < 0)
    goto <bb 188>;
  else
    goto <bb 189>;

<bb 188>:
  D.6742 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.171 = stderr;
  stderr.172 = (struct FILE * restrict) stderr.171;
  fprintf (stderr.172, D.6742, "Set Fragmentation Threshold", 35620);
  D.6745 = __errno_location ();
  D.6746 = *D.6745;
  D.6747 = strerror (D.6746);
  D.6748 = (const char * restrict) &"    SET failed on device %-1.16s ; %s.\n"[0];
  stderr.173 = stderr;
  stderr.174 = (struct FILE * restrict) stderr.173;
  fprintf (stderr.174, D.6748, ifname, D.6747);
  D.5839 = -5;
  goto <bb 314>;

<bb 189>:
  // predicted unlikely by continue predictor.
  goto <bb 311>;

<bb 190>:
  D.6751 = (long unsigned int) i;
  D.6752 = D.6751 * 8;
  D.6753 = args + D.6752;
  D.6754 = *D.6753;
  D.6755 = strcmp (D.6754, "mode");
  if (D.6755 == 0)
    goto <bb 191>;
  else
    goto <bb 204>;

<bb 191>:
  i = i + 1;
  if (i >= count)
    goto <bb 192>;
  else
    goto <bb 193>;

<bb 192>:
  D.6760 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.175 = stderr;
  stderr.176 = (struct FILE * restrict) stderr.175;
  fprintf (stderr.176, D.6760, "Set Mode", 35590);
  stderr.177 = stderr;
  stderr.178 = (struct FILE * restrict) stderr.177;
  D.6765 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.6765, 1, 23, stderr.178);
  D.5839 = -1;
  goto <bb 314>;

<bb 193>:
  D.6766 = (const char * restrict) &"%i"[0];
  D.6767 = (long unsigned int) i;
  D.6768 = D.6767 * 8;
  D.6769 = args + D.6768;
  D.6770 = *D.6769;
  D.6771 = (const char * restrict) D.6770;
  D.6772 = sscanf (D.6771, D.6766, &k);
  if (D.6772 != 1)
    goto <bb 194>;
  else
    goto <bb 198>;

<bb 194>:
  k = 0;
  goto <bb 196>;

<bb 195>:
  k.179 = k;
  k.180 = k.179 + 1;
  k = k.180;

<bb 196>:
  k.181 = k;
  if (k.181 <= 6)
    goto <bb 197>;
  else
    goto <bb 198>;

<bb 197>:
  k.182 = k;
  D.6780 = iw_operation_mode[k.182];
  D.6781 = (long unsigned int) i;
  D.6782 = D.6781 * 8;
  D.6783 = args + D.6782;
  D.6784 = *D.6783;
  D.6785 = strncasecmp (D.6784, D.6780, 3);
  if (D.6785 != 0)
    goto <bb 195>;
  else
    goto <bb 198>;

<bb 198>:
  k.183 = k;
  if (k.183 > 6)
    goto <bb 200>;
  else
    goto <bb 199>;

<bb 199>:
  k.184 = k;
  if (k.184 < 0)
    goto <bb 200>;
  else
    goto <bb 201>;

<bb 200>:
  D.6791 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.185 = stderr;
  stderr.186 = (struct FILE * restrict) stderr.185;
  fprintf (stderr.186, D.6791, "Set Mode", 35590);
  D.6794 = (long unsigned int) i;
  D.6795 = D.6794 * 8;
  D.6796 = args + D.6795;
  D.6797 = *D.6796;
  D.6798 = (const char * restrict) &"    invalid argument \"%s\".\n"[0];
  stderr.187 = stderr;
  stderr.188 = (struct FILE * restrict) stderr.187;
  fprintf (stderr.188, D.6798, D.6797);
  D.5839 = -2;
  goto <bb 314>;

<bb 201>:
  k.189 = k;
  k.190 = (__u32) k.189;
  wrq.u.mode = k.190;
  D.6803 = iw_set_ext (skfd, ifname, 35590, &wrq);
  if (D.6803 < 0)
    goto <bb 202>;
  else
    goto <bb 203>;

<bb 202>:
  D.6806 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.191 = stderr;
  stderr.192 = (struct FILE * restrict) stderr.191;
  fprintf (stderr.192, D.6806, "Set Mode", 35590);
  D.6809 = __errno_location ();
  D.6810 = *D.6809;
  D.6811 = strerror (D.6810);
  D.6812 = (const char * restrict) &"    SET failed on device %-1.16s ; %s.\n"[0];
  stderr.193 = stderr;
  stderr.194 = (struct FILE * restrict) stderr.193;
  fprintf (stderr.194, D.6812, ifname, D.6811);
  D.5839 = -5;
  goto <bb 314>;

<bb 203>:
  // predicted unlikely by continue predictor.
  goto <bb 311>;

<bb 204>:
  D.6815 = (long unsigned int) i;
  D.6816 = D.6815 * 8;
  D.6817 = args + D.6816;
  D.6818 = *D.6817;
  D.6819 = strncmp (D.6818, "power", 3);
  if (D.6819 == 0)
    goto <bb 205>;
  else
    goto <bb 252>;

<bb 205>:
  i = i + 1;
  if (i >= count)
    goto <bb 206>;
  else
    goto <bb 207>;

<bb 206>:
  D.6824 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.195 = stderr;
  stderr.196 = (struct FILE * restrict) stderr.195;
  fprintf (stderr.196, D.6824, "Set Power Management", 35628);
  stderr.197 = stderr;
  stderr.198 = (struct FILE * restrict) stderr.197;
  D.6829 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.6829, 1, 23, stderr.198);
  D.5839 = -1;
  goto <bb 314>;

<bb 207>:
  D.6830 = (long unsigned int) i;
  D.6831 = D.6830 * 8;
  D.6832 = args + D.6831;
  D.6833 = *D.6832;
  D.6834 = strcasecmp (D.6833, "off");
  if (D.6834 == 0)
    goto <bb 208>;
  else
    goto <bb 209>;

<bb 208>:
  wrq.u.power.disabled = 1;
  goto <bb 249>;

<bb 209>:
  D.6838 = (long unsigned int) i;
  D.6839 = D.6838 * 8;
  D.6840 = args + D.6839;
  D.6841 = *D.6840;
  D.6842 = strcasecmp (D.6841, "on");
  if (D.6842 == 0)
    goto <bb 210>;
  else
    goto <bb 213>;

<bb 210>:
  D.6845 = iw_get_ext (skfd, ifname, 35629, &wrq);
  if (D.6845 < 0)
    goto <bb 211>;
  else
    goto <bb 212>;

<bb 211>:
  D.6848 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.199 = stderr;
  stderr.200 = (struct FILE * restrict) stderr.199;
  fprintf (stderr.200, D.6848, "Set Power Management", 35629);
  D.6851 = __errno_location ();
  D.6852 = *D.6851;
  D.6853 = strerror (D.6852);
  D.6854 = (const char * restrict) &"    GET failed on device %-1.16s ; %s.\n"[0];
  stderr.201 = stderr;
  stderr.202 = (struct FILE * restrict) stderr.201;
  fprintf (stderr.202, D.6854, ifname, D.6853);
  D.5839 = -6;
  goto <bb 314>;

<bb 212>:
  wrq.u.power.disabled = 0;
  goto <bb 249>;

<bb 213>:
  gotone = 0;
  wrq.u.power.flags = 0;
  wrq.u.power.disabled = 0;
  D.6858 = (long unsigned int) i;
  D.6859 = D.6858 * 8;
  D.6860 = args + D.6859;
  D.6861 = *D.6860;
  D.6862 = strcasecmp (D.6861, "min");
  if (D.6862 == 0)
    goto <bb 214>;
  else
    goto <bb 216>;

<bb 214>:
  D.6865 = wrq.u.power.flags;
  D.6866 = D.6865 | 1;
  wrq.u.power.flags = D.6866;
  i = i + 1;
  if (i >= count)
    goto <bb 215>;
  else
    goto <bb 219>;

<bb 215>:
  D.6869 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.203 = stderr;
  stderr.204 = (struct FILE * restrict) stderr.203;
  fprintf (stderr.204, D.6869, "Set Power Management", 35628);
  stderr.205 = stderr;
  stderr.206 = (struct FILE * restrict) stderr.205;
  D.6874 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.6874, 1, 23, stderr.206);
  D.5839 = -1;
  goto <bb 314>;

<bb 216>:
  D.6876 = (long unsigned int) i;
  D.6877 = D.6876 * 8;
  D.6878 = args + D.6877;
  D.6879 = *D.6878;
  D.6880 = strcasecmp (D.6879, "max");
  if (D.6880 == 0)
    goto <bb 217>;
  else
    goto <bb 219>;

<bb 217>:
  D.6883 = wrq.u.power.flags;
  D.6884 = D.6883 | 2;
  wrq.u.power.flags = D.6884;
  i = i + 1;
  if (i >= count)
    goto <bb 218>;
  else
    goto <bb 219>;

<bb 218>:
  D.6887 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.207 = stderr;
  stderr.208 = (struct FILE * restrict) stderr.207;
  fprintf (stderr.208, D.6887, "Set Power Management", 35628);
  stderr.209 = stderr;
  stderr.210 = (struct FILE * restrict) stderr.209;
  D.6892 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.6892, 1, 23, stderr.210);
  D.5839 = -1;
  goto <bb 314>;

<bb 219>:
  D.6893 = (long unsigned int) i;
  D.6894 = D.6893 * 8;
  D.6895 = args + D.6894;
  D.6896 = *D.6895;
  D.6897 = strcasecmp (D.6896, "period");
  if (D.6897 == 0)
    goto <bb 220>;
  else
    goto <bb 222>;

<bb 220>:
  D.6900 = wrq.u.power.flags;
  D.6901 = D.6900 | 4096;
  wrq.u.power.flags = D.6901;
  i = i + 1;
  if (i >= count)
    goto <bb 221>;
  else
    goto <bb 225>;

<bb 221>:
  D.6904 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.211 = stderr;
  stderr.212 = (struct FILE * restrict) stderr.211;
  fprintf (stderr.212, D.6904, "Set Power Management", 35628);
  stderr.213 = stderr;
  stderr.214 = (struct FILE * restrict) stderr.213;
  D.6909 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.6909, 1, 23, stderr.214);
  D.5839 = -1;
  goto <bb 314>;

<bb 222>:
  D.6911 = (long unsigned int) i;
  D.6912 = D.6911 * 8;
  D.6913 = args + D.6912;
  D.6914 = *D.6913;
  D.6915 = strcasecmp (D.6914, "timeout");
  if (D.6915 == 0)
    goto <bb 223>;
  else
    goto <bb 225>;

<bb 223>:
  D.6918 = wrq.u.power.flags;
  D.6919 = D.6918 | 8192;
  wrq.u.power.flags = D.6919;
  i = i + 1;
  if (i >= count)
    goto <bb 224>;
  else
    goto <bb 225>;

<bb 224>:
  D.6922 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.215 = stderr;
  stderr.216 = (struct FILE * restrict) stderr.215;
  fprintf (stderr.216, D.6922, "Set Power Management", 35628);
  stderr.217 = stderr;
  stderr.218 = (struct FILE * restrict) stderr.217;
  D.6927 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.6927, 1, 23, stderr.218);
  D.5839 = -1;
  goto <bb 314>;

<bb 225>:
  D.6928 = (const char * restrict) &"%lg"[0];
  D.6929 = (long unsigned int) i;
  D.6930 = D.6929 * 8;
  D.6931 = args + D.6930;
  D.6932 = *D.6931;
  D.6933 = (const char * restrict) D.6932;
  D.6934 = sscanf (D.6933, D.6928, &temp);
  if (D.6934 == 1)
    goto <bb 226>;
  else
    goto <bb 233>;

<bb 226>:
  temp.219 = temp;
  temp.220 = temp.219 * 1.0e+6;
  temp = temp.220;
  D.6939 = (long unsigned int) i;
  D.6940 = D.6939 * 8;
  D.6941 = args + D.6940;
  D.6942 = *D.6941;
  D.6943 = index (D.6942, 117);
  if (D.6943 != 0B)
    goto <bb 227>;
  else
    goto <bb 228>;

<bb 227>:
  temp.221 = temp;
  temp.222 = temp.221 / 1.0e+6;
  temp = temp.222;

<bb 228>:
  D.6948 = (long unsigned int) i;
  D.6949 = D.6948 * 8;
  D.6950 = args + D.6949;
  D.6951 = *D.6950;
  D.6952 = index (D.6951, 109);
  if (D.6952 != 0B)
    goto <bb 229>;
  else
    goto <bb 230>;

<bb 229>:
  temp.223 = temp;
  temp.224 = temp.223 / 1.0e+3;
  temp = temp.224;

<bb 230>:
  temp.225 = temp;
  D.6958 = (long int) temp.225;
  D.6959 = (__s32) D.6958;
  wrq.u.power.value = D.6959;
  D.6960 = wrq.u.power.flags;
  D.6961 = (int) D.6960;
  D.6962 = D.6961 & 61440;
  if (D.6962 == 0)
    goto <bb 231>;
  else
    goto <bb 232>;

<bb 231>:
  D.6965 = wrq.u.power.flags;
  D.6966 = D.6965 | 4096;
  wrq.u.power.flags = D.6966;

<bb 232>:
  i = i + 1;
  gotone = 1;

<bb 233>:
  if (i < count)
    goto <bb 234>;
  else
    goto <bb 246>;

<bb 234>:
  D.6969 = (long unsigned int) i;
  D.6970 = D.6969 * 8;
  D.6971 = args + D.6970;
  D.6972 = *D.6971;
  D.6973 = strcasecmp (D.6972, "all");
  if (D.6973 == 0)
    goto <bb 235>;
  else
    goto <bb 236>;

<bb 235>:
  D.6976 = wrq.u.power.flags;
  D.6977 = D.6976 | 768;
  wrq.u.power.flags = D.6977;

<bb 236>:
  D.6978 = (long unsigned int) i;
  D.6979 = D.6978 * 8;
  D.6980 = args + D.6979;
  D.6981 = *D.6980;
  D.6982 = strncasecmp (D.6981, "unicast", 4);
  if (D.6982 == 0)
    goto <bb 237>;
  else
    goto <bb 238>;

<bb 237>:
  D.6985 = wrq.u.power.flags;
  D.6986 = D.6985 | 256;
  wrq.u.power.flags = D.6986;

<bb 238>:
  D.6987 = (long unsigned int) i;
  D.6988 = D.6987 * 8;
  D.6989 = args + D.6988;
  D.6990 = *D.6989;
  D.6991 = strncasecmp (D.6990, "multicast", 5);
  if (D.6991 == 0)
    goto <bb 239>;
  else
    goto <bb 240>;

<bb 239>:
  D.6994 = wrq.u.power.flags;
  D.6995 = D.6994 | 512;
  wrq.u.power.flags = D.6995;

<bb 240>:
  D.6996 = (long unsigned int) i;
  D.6997 = D.6996 * 8;
  D.6998 = args + D.6997;
  D.6999 = *D.6998;
  D.7000 = strncasecmp (D.6999, "force", 5);
  if (D.7000 == 0)
    goto <bb 241>;
  else
    goto <bb 242>;

<bb 241>:
  D.7003 = wrq.u.power.flags;
  D.7004 = D.7003 | 1024;
  wrq.u.power.flags = D.7004;

<bb 242>:
  D.7005 = (long unsigned int) i;
  D.7006 = D.7005 * 8;
  D.7007 = args + D.7006;
  D.7008 = *D.7007;
  D.7009 = strcasecmp (D.7008, "repeat");
  if (D.7009 == 0)
    goto <bb 243>;
  else
    goto <bb 244>;

<bb 243>:
  D.7012 = wrq.u.power.flags;
  D.7013 = D.7012 | 2048;
  wrq.u.power.flags = D.7013;

<bb 244>:
  D.7014 = wrq.u.power.flags;
  D.7015 = (int) D.7014;
  D.7016 = D.7015 & 3840;
  if (D.7016 != 0)
    goto <bb 245>;
  else
    goto <bb 246>;

<bb 245>:
  i = i + 1;
  gotone = 1;

<bb 246>:
  if (gotone == 0)
    goto <bb 247>;
  else
    goto <bb 248>;

<bb 247>:
  D.7021 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.226 = stderr;
  stderr.227 = (struct FILE * restrict) stderr.226;
  fprintf (stderr.227, D.7021, "Set Power Management", 35628);
  D.7024 = (long unsigned int) i;
  D.7025 = D.7024 * 8;
  D.7026 = args + D.7025;
  D.7027 = *D.7026;
  D.7028 = (const char * restrict) &"    invalid argument \"%s\".\n"[0];
  stderr.228 = stderr;
  stderr.229 = (struct FILE * restrict) stderr.228;
  fprintf (stderr.229, D.7028, D.7027);
  D.5839 = -2;
  goto <bb 314>;

<bb 248>:
  i = i - 1;

<bb 249>:
  D.7031 = iw_set_ext (skfd, ifname, 35628, &wrq);
  if (D.7031 < 0)
    goto <bb 250>;
  else
    goto <bb 251>;

<bb 250>:
  D.7034 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.230 = stderr;
  stderr.231 = (struct FILE * restrict) stderr.230;
  fprintf (stderr.231, D.7034, "Set Power Management", 35628);
  D.7037 = __errno_location ();
  D.7038 = *D.7037;
  D.7039 = strerror (D.7038);
  D.7040 = (const char * restrict) &"    SET failed on device %-1.16s ; %s.\n"[0];
  stderr.232 = stderr;
  stderr.233 = (struct FILE * restrict) stderr.232;
  fprintf (stderr.233, D.7040, ifname, D.7039);
  D.5839 = -5;
  goto <bb 314>;

<bb 251>:
  // predicted unlikely by continue predictor.
  goto <bb 311>;

<bb 252>:
  D.7043 = (long unsigned int) i;
  D.7044 = D.7043 * 8;
  D.7045 = args + D.7044;
  D.7046 = *D.7045;
  D.7047 = strncmp (D.7046, "txpower", 3);
  if (D.7047 == 0)
    goto <bb 253>;
  else
    goto <bb 283>;

<bb 253>:
  i = i + 1;
  if (i >= count)
    goto <bb 254>;
  else
    goto <bb 255>;

<bb 254>:
  D.7052 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.234 = stderr;
  stderr.235 = (struct FILE * restrict) stderr.234;
  fprintf (stderr.235, D.7052, "Set Tx Power", 35622);
  stderr.236 = stderr;
  stderr.237 = (struct FILE * restrict) stderr.236;
  D.7057 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.7057, 1, 23, stderr.237);
  D.5839 = -1;
  goto <bb 314>;

<bb 255>:
  D.7058 = iw_get_range_info (skfd, ifname, &range);
  if (D.7058 < 0)
    goto <bb 256>;
  else
    goto <bb 257>;

<bb 256>:
  memset (&range, 0, 568);

<bb 257>:
  wrq.u.txpower.value = -1;
  wrq.u.txpower.fixed = 1;
  wrq.u.txpower.disabled = 0;
  wrq.u.data.flags = 0;
  D.7061 = (long unsigned int) i;
  D.7062 = D.7061 * 8;
  D.7063 = args + D.7062;
  D.7064 = *D.7063;
  D.7065 = strcasecmp (D.7064, "off");
  if (D.7065 == 0)
    goto <bb 258>;
  else
    goto <bb 259>;

<bb 258>:
  wrq.u.txpower.disabled = 1;
  goto <bb 280>;

<bb 259>:
  D.7069 = (long unsigned int) i;
  D.7070 = D.7069 * 8;
  D.7071 = args + D.7070;
  D.7072 = *D.7071;
  D.7073 = strcasecmp (D.7072, "auto");
  if (D.7073 == 0)
    goto <bb 260>;
  else
    goto <bb 261>;

<bb 260>:
  wrq.u.txpower.fixed = 0;
  goto <bb 280>;

<bb 261>:
  D.7077 = (long unsigned int) i;
  D.7078 = D.7077 * 8;
  D.7079 = args + D.7078;
  D.7080 = *D.7079;
  D.7081 = strcasecmp (D.7080, "fixed");
  if (D.7081 == 0)
    goto <bb 262>;
  else
    goto <bb 265>;

<bb 262>:
  D.7084 = iw_get_ext (skfd, ifname, 35623, &wrq);
  if (D.7084 < 0)
    goto <bb 263>;
  else
    goto <bb 264>;

<bb 263>:
  D.7087 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.238 = stderr;
  stderr.239 = (struct FILE * restrict) stderr.238;
  fprintf (stderr.239, D.7087, "Set Tx Power", 35623);
  D.7090 = __errno_location ();
  D.7091 = *D.7090;
  D.7092 = strerror (D.7091);
  D.7093 = (const char * restrict) &"    GET failed on device %-1.16s ; %s.\n"[0];
  stderr.240 = stderr;
  stderr.241 = (struct FILE * restrict) stderr.240;
  fprintf (stderr.241, D.7093, ifname, D.7092);
  D.5839 = -6;
  goto <bb 314>;

<bb 264>:
  wrq.u.txpower.fixed = 1;
  goto <bb 280>;

<bb 265>:
  ismwatt = 0;
  D.7097 = (const char * restrict) &"%i"[0];
  D.7098 = (long unsigned int) i;
  D.7099 = D.7098 * 8;
  D.7100 = args + D.7099;
  D.7101 = *D.7100;
  D.7102 = (const char * restrict) D.7101;
  D.7103 = sscanf (D.7102, D.7097, &power);
  if (D.7103 != 1)
    goto <bb 266>;
  else
    goto <bb 267>;

<bb 266>:
  D.7106 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.242 = stderr;
  stderr.243 = (struct FILE * restrict) stderr.242;
  fprintf (stderr.243, D.7106, "Set Tx Power", 35622);
  D.7109 = (long unsigned int) i;
  D.7110 = D.7109 * 8;
  D.7111 = args + D.7110;
  D.7112 = *D.7111;
  D.7113 = (const char * restrict) &"    invalid argument \"%s\".\n"[0];
  stderr.244 = stderr;
  stderr.245 = (struct FILE * restrict) stderr.244;
  fprintf (stderr.245, D.7113, D.7112);
  D.5839 = -2;
  goto <bb 314>;

<bb 267>:
  D.7116 = (long unsigned int) i;
  D.7117 = D.7116 * 8;
  D.7118 = args + D.7117;
  D.7119 = *D.7118;
  D.7120 = index (D.7119, 109);
  ismwatt = D.7120 != 0B;
  D.7121 = range.txpower_capa;
  D.7122 = (int) D.7121;
  D.7123 = D.7122 & 1;
  D.7124 = (_Bool) D.7123;
  if (D.7124 != 0)
    goto <bb 268>;
  else
    goto <bb 271>;

<bb 268>:
  if (ismwatt == 0)
    goto <bb 269>;
  else
    goto <bb 270>;

<bb 269>:
  power.246 = power;
  power.247 = iw_dbm2mwatt (power.246);
  power = power.247;

<bb 270>:
  wrq.u.data.flags = 1;
  goto <bb 274>;

<bb 271>:
  if (ismwatt != 0)
    goto <bb 272>;
  else
    goto <bb 273>;

<bb 272>:
  power.248 = power;
  power.249 = iw_mwatt2dbm (power.248);
  power = power.249;

<bb 273>:
  wrq.u.data.flags = 0;

<bb 274>:
  power.250 = power;
  wrq.u.txpower.value = power.250;
  D.7137 = i + 1;
  if (D.7137 < count)
    goto <bb 275>;
  else
    goto <bb 277>;

<bb 275>:
  D.7140 = (long unsigned int) i;
  D.7141 = D.7140 + 1;
  D.7142 = D.7141 * 8;
  D.7143 = args + D.7142;
  D.7144 = *D.7143;
  D.7145 = strcasecmp (D.7144, "auto");
  if (D.7145 == 0)
    goto <bb 276>;
  else
    goto <bb 277>;

<bb 276>:
  wrq.u.txpower.fixed = 0;
  i = i + 1;

<bb 277>:
  D.7148 = i + 1;
  if (D.7148 < count)
    goto <bb 278>;
  else
    goto <bb 280>;

<bb 278>:
  D.7151 = (long unsigned int) i;
  D.7152 = D.7151 + 1;
  D.7153 = D.7152 * 8;
  D.7154 = args + D.7153;
  D.7155 = *D.7154;
  D.7156 = strcasecmp (D.7155, "fixed");
  if (D.7156 == 0)
    goto <bb 279>;
  else
    goto <bb 280>;

<bb 279>:
  wrq.u.txpower.fixed = 1;
  i = i + 1;

<bb 280>:
  D.7159 = iw_set_ext (skfd, ifname, 35622, &wrq);
  if (D.7159 < 0)
    goto <bb 281>;
  else
    goto <bb 282>;

<bb 281>:
  D.7162 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.251 = stderr;
  stderr.252 = (struct FILE * restrict) stderr.251;
  fprintf (stderr.252, D.7162, "Set Tx Power", 35622);
  D.7165 = __errno_location ();
  D.7166 = *D.7165;
  D.7167 = strerror (D.7166);
  D.7168 = (const char * restrict) &"    SET failed on device %-1.16s ; %s.\n"[0];
  stderr.253 = stderr;
  stderr.254 = (struct FILE * restrict) stderr.253;
  fprintf (stderr.254, D.7168, ifname, D.7167);
  D.5839 = -5;
  goto <bb 314>;

<bb 282>:
  // predicted unlikely by continue predictor.
  goto <bb 311>;

<bb 283>:
  D.7171 = (long unsigned int) i;
  D.7172 = D.7171 * 8;
  D.7173 = args + D.7172;
  D.7174 = *D.7173;
  D.7175 = strncmp (D.7174, "retry", 3);
  if (D.7175 == 0)
    goto <bb 284>;
  else
    goto <bb 310>;

<bb 284>:
  gotone = 0;
  i = i + 1;
  if (i >= count)
    goto <bb 285>;
  else
    goto <bb 286>;

<bb 285>:
  D.7180 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.255 = stderr;
  stderr.256 = (struct FILE * restrict) stderr.255;
  fprintf (stderr.256, D.7180, "Set Retry Limit", 35624);
  stderr.257 = stderr;
  stderr.258 = (struct FILE * restrict) stderr.257;
  D.7185 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.7185, 1, 23, stderr.258);
  D.5839 = -1;
  goto <bb 314>;

<bb 286>:
  wrq.u.retry.flags = 4096;
  wrq.u.retry.disabled = 0;
  D.7186 = (long unsigned int) i;
  D.7187 = D.7186 * 8;
  D.7188 = args + D.7187;
  D.7189 = *D.7188;
  D.7190 = strcasecmp (D.7189, "min");
  if (D.7190 == 0)
    goto <bb 287>;
  else
    goto <bb 289>;

<bb 287>:
  D.7193 = wrq.u.retry.flags;
  D.7194 = D.7193 | 1;
  wrq.u.retry.flags = D.7194;
  i = i + 1;
  if (i >= count)
    goto <bb 288>;
  else
    goto <bb 292>;

<bb 288>:
  D.7197 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.259 = stderr;
  stderr.260 = (struct FILE * restrict) stderr.259;
  fprintf (stderr.260, D.7197, "Set Retry Limit", 35624);
  stderr.261 = stderr;
  stderr.262 = (struct FILE * restrict) stderr.261;
  D.7202 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.7202, 1, 23, stderr.262);
  D.5839 = -1;
  goto <bb 314>;

<bb 289>:
  D.7204 = (long unsigned int) i;
  D.7205 = D.7204 * 8;
  D.7206 = args + D.7205;
  D.7207 = *D.7206;
  D.7208 = strcasecmp (D.7207, "max");
  if (D.7208 == 0)
    goto <bb 290>;
  else
    goto <bb 292>;

<bb 290>:
  D.7211 = wrq.u.retry.flags;
  D.7212 = D.7211 | 2;
  wrq.u.retry.flags = D.7212;
  i = i + 1;
  if (i >= count)
    goto <bb 291>;
  else
    goto <bb 292>;

<bb 291>:
  D.7215 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.263 = stderr;
  stderr.264 = (struct FILE * restrict) stderr.263;
  fprintf (stderr.264, D.7215, "Set Retry Limit", 35624);
  stderr.265 = stderr;
  stderr.266 = (struct FILE * restrict) stderr.265;
  D.7220 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.7220, 1, 23, stderr.266);
  D.5839 = -1;
  goto <bb 314>;

<bb 292>:
  D.7221 = (long unsigned int) i;
  D.7222 = D.7221 * 8;
  D.7223 = args + D.7222;
  D.7224 = *D.7223;
  D.7225 = strcasecmp (D.7224, "limit");
  if (D.7225 == 0)
    goto <bb 293>;
  else
    goto <bb 295>;

<bb 293>:
  D.7228 = wrq.u.retry.flags;
  D.7229 = D.7228 | 4096;
  wrq.u.retry.flags = D.7229;
  i = i + 1;
  if (i >= count)
    goto <bb 294>;
  else
    goto <bb 298>;

<bb 294>:
  D.7232 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.267 = stderr;
  stderr.268 = (struct FILE * restrict) stderr.267;
  fprintf (stderr.268, D.7232, "Set Retry Limit", 35624);
  stderr.269 = stderr;
  stderr.270 = (struct FILE * restrict) stderr.269;
  D.7237 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.7237, 1, 23, stderr.270);
  D.5839 = -1;
  goto <bb 314>;

<bb 295>:
  D.7239 = (long unsigned int) i;
  D.7240 = D.7239 * 8;
  D.7241 = args + D.7240;
  D.7242 = *D.7241;
  D.7243 = strncasecmp (D.7242, "lifetime", 4);
  if (D.7243 == 0)
    goto <bb 296>;
  else
    goto <bb 298>;

<bb 296>:
  D.7246 = wrq.u.retry.flags;
  D.7247 = D.7246 & 61439;
  wrq.u.retry.flags = D.7247;
  D.7248 = wrq.u.retry.flags;
  D.7249 = D.7248 | 8192;
  wrq.u.retry.flags = D.7249;
  i = i + 1;
  if (i >= count)
    goto <bb 297>;
  else
    goto <bb 298>;

<bb 297>:
  D.7252 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.271 = stderr;
  stderr.272 = (struct FILE * restrict) stderr.271;
  fprintf (stderr.272, D.7252, "Set Retry Limit", 35624);
  stderr.273 = stderr;
  stderr.274 = (struct FILE * restrict) stderr.273;
  D.7257 = (const char * restrict) &"    too few arguments.\n"[0];
  __builtin_fwrite (D.7257, 1, 23, stderr.274);
  D.5839 = -1;
  goto <bb 314>;

<bb 298>:
  D.7258 = (const char * restrict) &"%lg"[0];
  D.7259 = (long unsigned int) i;
  D.7260 = D.7259 * 8;
  D.7261 = args + D.7260;
  D.7262 = *D.7261;
  D.7263 = (const char * restrict) D.7262;
  D.7264 = sscanf (D.7263, D.7258, &temp);
  if (D.7264 == 1)
    goto <bb 299>;
  else
    goto <bb 305>;

<bb 299>:
  D.7267 = wrq.u.retry.flags;
  D.7268 = (int) D.7267;
  D.7269 = D.7268 & 4096;
  if (D.7269 == 0)
    goto <bb 300>;
  else
    goto <bb 304>;

<bb 300>:
  temp.275 = temp;
  temp.276 = temp.275 * 1.0e+6;
  temp = temp.276;
  D.7274 = (long unsigned int) i;
  D.7275 = D.7274 * 8;
  D.7276 = args + D.7275;
  D.7277 = *D.7276;
  D.7278 = index (D.7277, 117);
  if (D.7278 != 0B)
    goto <bb 301>;
  else
    goto <bb 302>;

<bb 301>:
  temp.277 = temp;
  temp.278 = temp.277 / 1.0e+6;
  temp = temp.278;

<bb 302>:
  D.7283 = (long unsigned int) i;
  D.7284 = D.7283 * 8;
  D.7285 = args + D.7284;
  D.7286 = *D.7285;
  D.7287 = index (D.7286, 109);
  if (D.7287 != 0B)
    goto <bb 303>;
  else
    goto <bb 304>;

<bb 303>:
  temp.279 = temp;
  temp.280 = temp.279 / 1.0e+3;
  temp = temp.280;

<bb 304>:
  temp.281 = temp;
  D.7293 = (long int) temp.281;
  D.7294 = (__s32) D.7293;
  wrq.u.retry.value = D.7294;
  i = i + 1;
  gotone = 1;

<bb 305>:
  if (gotone == 0)
    goto <bb 306>;
  else
    goto <bb 307>;

<bb 306>:
  D.7297 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.282 = stderr;
  stderr.283 = (struct FILE * restrict) stderr.282;
  fprintf (stderr.283, D.7297, "Set Retry Limit", 35624);
  D.7300 = (long unsigned int) i;
  D.7301 = D.7300 * 8;
  D.7302 = args + D.7301;
  D.7303 = *D.7302;
  D.7304 = (const char * restrict) &"    invalid argument \"%s\".\n"[0];
  stderr.284 = stderr;
  stderr.285 = (struct FILE * restrict) stderr.284;
  fprintf (stderr.285, D.7304, D.7303);
  D.5839 = -2;
  goto <bb 314>;

<bb 307>:
  i = i - 1;
  D.7307 = iw_set_ext (skfd, ifname, 35624, &wrq);
  if (D.7307 < 0)
    goto <bb 308>;
  else
    goto <bb 309>;

<bb 308>:
  D.7310 = (const char * restrict) &"Error for wireless request \"%s\" (%X) :\n"[0];
  stderr.286 = stderr;
  stderr.287 = (struct FILE * restrict) stderr.286;
  fprintf (stderr.287, D.7310, "Set Retry Limit", 35624);
  D.7313 = __errno_location ();
  D.7314 = *D.7313;
  D.7315 = strerror (D.7314);
  D.7316 = (const char * restrict) &"    SET failed on device %-1.16s ; %s.\n"[0];
  stderr.288 = stderr;
  stderr.289 = (struct FILE * restrict) stderr.288;
  fprintf (stderr.289, D.7316, ifname, D.7315);
  D.5839 = -5;
  goto <bb 314>;

<bb 309>:
  // predicted unlikely by continue predictor.
  goto <bb 311>;

<bb 310>:
  D.7319 = (long unsigned int) i;
  D.7320 = D.7319 * 8;
  D.7321 = args + D.7320;
  D.7322 = *D.7321;
  D.7323 = (const char * restrict) &"Error : unrecognised wireless request \"%s\"\n"[0];
  stderr.290 = stderr;
  stderr.291 = (struct FILE * restrict) stderr.290;
  fprintf (stderr.291, D.7323, D.7322);
  D.5839 = -1;
  goto <bb 314>;

<bb 311>:
  i = i + 1;

<bb 312>:
  if (i < count)
    goto <bb 5>;
  else
    goto <bb 313>;

<bb 313>:
  D.5839 = 0;

<bb 314>:
  return D.5839;

}



;; Function iw_broad_ether (iw_broad_ether)

iw_broad_ether (struct sockaddr * sap)
{
  char[14] * D.7327;

<bb 2>:
  sap->sa_family = 1;
  D.7327 = &sap->sa_data;
  memset (D.7327, 255, 6);
  return;

}



;; Function iw_null_ether (iw_null_ether)

iw_null_ether (struct sockaddr * sap)
{
  char[14] * D.7328;

<bb 2>:
  sap->sa_family = 1;
  D.7328 = &sap->sa_data;
  memset (D.7328, 0, 6);
  return;

}



;; Function iw_get_ext (iw_get_ext)

Merging blocks 2 and 3
iw_get_ext (int skfd, char * ifname, int request, struct iwreq * pwrq)
{
  long unsigned int D.7332;
  int D.7331;
  char[16] * D.7330;
  const char * restrict ifname.292;

<bb 2>:
  ifname.292 = (const char * restrict) ifname;
  D.7330 = &pwrq->ifr_ifrn.ifrn_name;
  strncpy (D.7330, ifname.292, 16);
  D.7332 = (long unsigned int) request;
  D.7331 = ioctl (skfd, D.7332, pwrq);
  return D.7331;

}



;; Function iw_set_ext (iw_set_ext)

Merging blocks 2 and 3
iw_set_ext (int skfd, char * ifname, int request, struct iwreq * pwrq)
{
  long unsigned int D.7337;
  int D.7336;
  char[16] * D.7335;
  const char * restrict ifname.293;

<bb 2>:
  ifname.293 = (const char * restrict) ifname;
  D.7335 = &pwrq->ifr_ifrn.ifrn_name;
  strncpy (D.7335, ifname.293, 16);
  D.7337 = (long unsigned int) request;
  D.7336 = ioctl (skfd, D.7337, pwrq);
  return D.7336;

}



;; Function print_info (print_info)

Merging blocks 6 and 7
print_info (int skfd, char * ifname, char * * args, int count)
{
  int rc;
  struct wireless_info info;
  int D.7347;
  struct FILE * restrict stderr.297;
  struct _IO_FILE * stderr.296;
  const char * restrict D.7344;
  char * D.7343;
  int D.7342;
  struct FILE * restrict stderr.295;
  struct _IO_FILE * stderr.294;
  const char * restrict D.7339;

<bb 2>:
  args = args;
  count = count;
  rc = get_info (skfd, ifname, &info);
  switch (rc) <default: <L2>, case -95: <L1>, case 0: <L0>>

<L0>:
  display_info (&info, ifname);
  goto <bb 6>;

<L1>:
  D.7339 = (const char * restrict) &"%-8.8s  no wireless extensions.\n\n"[0];
  stderr.294 = stderr;
  stderr.295 = (struct FILE * restrict) stderr.294;
  fprintf (stderr.295, D.7339, ifname);
  goto <bb 6>;

<L2>:
  D.7342 = -rc;
  D.7343 = strerror (D.7342);
  D.7344 = (const char * restrict) &"%-8.8s  %s\n\n"[0];
  stderr.296 = stderr;
  stderr.297 = (struct FILE * restrict) stderr.296;
  fprintf (stderr.297, D.7344, ifname, D.7343);

<bb 6>:
  D.7347 = rc;
  return D.7347;

}



;; Function display_info (display_info)

Removing basic block 7
Removing basic block 60
display_info (struct wireless_info * info, char * ifname)
{
  int dbm;
  int tokens;
  char buffer[128];
  const char * restrict D.7620;
  __u32 D.7619;
  __u32 D.7618;
  __u32 D.7617;
  __u32 D.7616;
  __u32 D.7615;
  __u32 D.7614;
  const char * restrict D.7613;
  struct iw_quality * D.7612;
  struct iwrange * D.7611;
  int D.7610;
  int D.7607;
  const char * restrict D.7606;
  const char * restrict D.7605;
  __u16 D.7602;
  const char * restrict D.7601;
  int D.7600;
  __u16 D.7599;
  const char * restrict D.7598;
  __s32 D.7597;
  int D.7596;
  __u16 D.7595;
  int D.7592;
  int D.7591;
  __u16 D.7590;
  const char * restrict D.7588;
  __u8 D.7585;
  const char * restrict D.7584;
  int D.7581;
  const char * restrict D.7580;
  const char * restrict D.7579;
  int D.7576;
  int D.7575;
  const char * restrict D.7574;
  int D.7571;
  int D.7570;
  const char * restrict D.7569;
  int D.7568;
  int D.7567;
  int D.7564;
  int D.7563;
  const char * restrict D.7562;
  unsigned char[64] * D.7561;
  int D.7560;
  int D.7559;
  const char * restrict D.7558;
  int D.7557;
  int D.7555;
  int D.7554;
  const char * restrict D.7550;
  int D.7547;
  const char * restrict D.7546;
  const char * restrict D.7543;
  __s32 D.7542;
  const char * restrict D.7541;
  const char * restrict D.7539;
  __u8 D.7536;
  const char * restrict D.7534;
  __u8 D.7531;
  const char * restrict D.7530;
  int D.7525;
  const char * restrict D.7524;
  __s32 D.7523;
  const char * restrict D.7522;
  const char * restrict D.7520;
  __u8 D.7517;
  const char * restrict D.7515;
  __u8 D.7512;
  int D.7509;
  const char * restrict D.7508;
  const char * restrict D.7507;
  __u16 D.7504;
  const char * restrict D.7503;
  __s32 D.7502;
  int D.7501;
  __u16 D.7500;
  int D.7497;
  int D.7496;
  __u16 D.7495;
  const char * restrict D.7493;
  __u8 D.7490;
  const char * restrict D.7489;
  int D.7486;
  const char * restrict D.7485;
  const char * restrict D.7484;
  __s32 D.7483;
  const char * restrict D.7481;
  __s32 D.7480;
  __s32 D.7479;
  const char * restrict D.7477;
  __s32 D.7476;
  __s32 D.7473;
  int D.7470;
  const char * restrict D.7469;
  const char * restrict D.7467;
  __u8 D.7464;
  const char * restrict D.7463;
  int D.7458;
  const char * restrict D.7457;
  __s32 D.7455;
  _Bool D.7452;
  int D.7451;
  int D.7450;
  __u16 D.7449;
  const char * restrict D.7448;
  const char * restrict D.7446;
  __u8 D.7443;
  const char * restrict D.7441;
  __u8 D.7438;
  const char * restrict D.7437;
  int D.7432;
  const char * restrict D.7431;
  __u8 D.7427;
  int iftmp.298;
  __s32 D.7425;
  const char * restrict D.7424;
  int D.7419;
  const char * restrict D.7418;
  char * D.7417;
  char[14] * D.7416;
  const char * restrict D.7415;
  const char * restrict D.7414;
  int D.7412;
  int D.7410;
  const char * restrict D.7407;
  int D.7402;
  const char * restrict D.7401;
  double D.7400;
  int D.7397;
  const char * restrict D.7396;
  const char * const D.7395;
  int D.7394;
  int D.7391;
  const char * restrict D.7390;
  __s32 D.7389;
  const char * restrict D.7387;
  __u8 D.7384;
  int D.7381;
  const char * restrict D.7380;
  int D.7379;
  int D.7377;
  const char * restrict D.7374;
  char[33] * D.7373;
  int D.7370;
  const char * restrict D.7369;
  const char * restrict D.7367;
  char[33] * D.7366;
  const char * restrict D.7364;
  char[33] * D.7363;
  int D.7362;
  int D.7361;
  int D.7358;
  int D.7357;
  int D.7354;
  int D.7351;
  const char * restrict D.7350;
  char[17] * D.7349;

<bb 2>:
  tokens = 3;
  D.7349 = &info->name;
  D.7350 = (const char * restrict) &"%-8.8s  %s  "[0];
  printf (D.7350, ifname, D.7349);
  D.7351 = info->has_essid;
  if (D.7351 != 0)
    goto <bb 3>;
  else
    goto <bb 8>;

<bb 3>:
  D.7354 = info->essid_on;
  if (D.7354 != 0)
    goto <bb 4>;
  else
    goto <bb 7>;

<bb 4>:
  D.7357 = info->essid_on;
  D.7358 = D.7357 & 255;
  if (D.7358 > 1)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.7361 = info->essid_on;
  D.7362 = D.7361 & 255;
  D.7363 = &info->essid;
  D.7364 = (const char * restrict) &"ESSID:\"%s\" [%d]  "[0];
  printf (D.7364, D.7363, D.7362);
  goto <bb 8>;

<bb 6>:
  D.7366 = &info->essid;
  D.7367 = (const char * restrict) &"ESSID:\"%s\"  "[0];
  printf (D.7367, D.7366);
  goto <bb 8>;

<bb 7>:
  D.7369 = (const char * restrict) &"ESSID:off/any  "[0];
  printf (D.7369);

<bb 8>:
  D.7370 = info->has_nickname;
  if (D.7370 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.7373 = &info->nickname;
  D.7374 = (const char * restrict) &"Nickname:\"%s\""[0];
  printf (D.7374, D.7373);

<bb 10>:
  D.7377 = info->has_essid;
  if (D.7377 != 0)
    goto <bb 12>;
  else
    goto <bb 11>;

<bb 11>:
  D.7379 = info->has_nickname;
  if (D.7379 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  D.7380 = (const char * restrict) &"\n          "[0];
  printf (D.7380);
  tokens = 0;

<bb 13>:
  D.7381 = info->has_nwid;
  if (D.7381 != 0)
    goto <bb 14>;
  else
    goto <bb 18>;

<bb 14>:
  D.7384 = info->nwid.disabled;
  if (D.7384 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  D.7387 = (const char * restrict) &"NWID:off/any  "[0];
  printf (D.7387);
  goto <bb 17>;

<bb 16>:
  D.7389 = info->nwid.value;
  D.7390 = (const char * restrict) &"NWID:%X  "[0];
  printf (D.7390, D.7389);

<bb 17>:
  tokens = tokens + 2;

<bb 18>:
  D.7391 = info->has_mode;
  if (D.7391 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  D.7394 = info->mode;
  D.7395 = iw_operation_mode[D.7394];
  D.7396 = (const char * restrict) &"Mode:%s  "[0];
  printf (D.7396, D.7395);
  tokens = tokens + 3;

<bb 20>:
  D.7397 = info->has_freq;
  if (D.7397 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  D.7400 = info->freq;
  iw_print_freq (&buffer, D.7400);
  D.7401 = (const char * restrict) &"%s  "[0];
  printf (D.7401, &buffer);
  tokens = tokens + 4;

<bb 22>:
  D.7402 = info->has_ap_addr;
  if (D.7402 != 0)
    goto <bb 23>;
  else
    goto <bb 30>;

<bb 23>:
  if (tokens > 8)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  D.7407 = (const char * restrict) &"\n          "[0];
  printf (D.7407);
  tokens = 0;

<bb 25>:
  tokens = tokens + 6;
  D.7410 = info->has_mode;
  if (D.7410 != 0)
    goto <bb 26>;
  else
    goto <bb 28>;

<bb 26>:
  D.7412 = info->mode;
  if (D.7412 == 1)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  D.7414 = (const char * restrict) &"Cell:"[0];
  printf (D.7414);
  goto <bb 29>;

<bb 28>:
  D.7415 = (const char * restrict) &"Access Point:"[0];
  printf (D.7415);

<bb 29>:
  D.7416 = &info->ap_addr.sa_data;
  D.7417 = iw_pr_ether (&buffer, D.7416);
  D.7418 = (const char * restrict) &" %s  "[0];
  printf (D.7418, D.7417);

<bb 30>:
  D.7419 = info->has_bitrate;
  if (D.7419 != 0)
    goto <bb 31>;
  else
    goto <bb 37>;

<bb 31>:
  if (tokens > 11)
    goto <bb 32>;
  else
    goto <bb 33>;

<bb 32>:
  D.7424 = (const char * restrict) &"\n          "[0];
  printf (D.7424);
  tokens = 0;

<bb 33>:
  tokens = tokens + 3;
  D.7425 = info->bitrate.value;
  iw_print_bitrate (&buffer, D.7425);
  D.7427 = info->bitrate.fixed;
  if (D.7427 != 0)
    goto <bb 34>;
  else
    goto <bb 35>;

<bb 34>:
  iftmp.298 = 61;
  goto <bb 36>;

<bb 35>:
  iftmp.298 = 58;

<bb 36>:
  D.7431 = (const char * restrict) &"Bit Rate%c%s   "[0];
  printf (D.7431, iftmp.298, &buffer);

<bb 37>:
  D.7432 = info->has_txpower;
  if (D.7432 != 0)
    goto <bb 38>;
  else
    goto <bb 49>;

<bb 38>:
  if (tokens > 11)
    goto <bb 39>;
  else
    goto <bb 40>;

<bb 39>:
  D.7437 = (const char * restrict) &"\n          "[0];
  printf (D.7437);
  tokens = 0;

<bb 40>:
  tokens = tokens + 3;
  D.7438 = info->txpower.disabled;
  if (D.7438 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;

<bb 41>:
  D.7441 = (const char * restrict) &"Tx-Power:off   "[0];
  printf (D.7441);
  goto <bb 49>;

<bb 42>:
  D.7443 = info->txpower.fixed;
  if (D.7443 != 0)
    goto <bb 43>;
  else
    goto <bb 44>;

<bb 43>:
  D.7446 = (const char * restrict) &"Tx-Power="[0];
  printf (D.7446);
  goto <bb 45>;

<bb 44>:
  D.7448 = (const char * restrict) &"Tx-Power:"[0];
  printf (D.7448);

<bb 45>:
  D.7449 = info->txpower.flags;
  D.7450 = (int) D.7449;
  D.7451 = D.7450 & 1;
  D.7452 = (_Bool) D.7451;
  if (D.7452 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;

<bb 46>:
  D.7455 = info->txpower.value;
  dbm = iw_mwatt2dbm (D.7455);
  goto <bb 48>;

<bb 47>:
  dbm = info->txpower.value;

<bb 48>:
  D.7457 = (const char * restrict) &"%d dBm   "[0];
  printf (D.7457, dbm);

<bb 49>:
  D.7458 = info->has_sens;
  if (D.7458 != 0)
    goto <bb 50>;
  else
    goto <bb 60>;

<bb 50>:
  if (tokens > 10)
    goto <bb 51>;
  else
    goto <bb 52>;

<bb 51>:
  D.7463 = (const char * restrict) &"\n          "[0];
  printf (D.7463);
  tokens = 0;

<bb 52>:
  tokens = tokens + 4;
  D.7464 = info->sens.fixed;
  if (D.7464 != 0)
    goto <bb 53>;
  else
    goto <bb 54>;

<bb 53>:
  D.7467 = (const char * restrict) &"Sensitivity="[0];
  printf (D.7467);
  goto <bb 55>;

<bb 54>:
  D.7469 = (const char * restrict) &"Sensitivity:"[0];
  printf (D.7469);

<bb 55>:
  D.7470 = info->has_range;
  if (D.7470 != 0)
    goto <bb 56>;
  else
    goto <bb 59>;

<bb 56>:
  D.7473 = info->sens.value;
  if (D.7473 < 0)
    goto <bb 57>;
  else
    goto <bb 58>;

<bb 57>:
  D.7476 = info->sens.value;
  D.7477 = (const char * restrict) &"%d dBm  "[0];
  printf (D.7477, D.7476);
  goto <bb 60>;

<bb 58>:
  D.7479 = info->range.sensitivity;
  D.7480 = info->sens.value;
  D.7481 = (const char * restrict) &"%d/%d  "[0];
  printf (D.7481, D.7480, D.7479);
  goto <bb 60>;

<bb 59>:
  D.7483 = info->sens.value;
  D.7484 = (const char * restrict) &"%d  "[0];
  printf (D.7484, D.7483);

<bb 60>:
  D.7485 = (const char * restrict) &"\n          "[0];
  printf (D.7485);
  tokens = 0;
  D.7486 = info->has_retry;
  if (D.7486 != 0)
    goto <bb 61>;
  else
    goto <bb 68>;

<bb 61>:
  D.7489 = (const char * restrict) &"Retry"[0];
  printf (D.7489);
  D.7490 = info->retry.disabled;
  if (D.7490 != 0)
    goto <bb 62>;
  else
    goto <bb 63>;

<bb 62>:
  D.7493 = (const char * restrict) &":off"[0];
  printf (D.7493);
  goto <bb 67>;

<bb 63>:
  D.7495 = info->retry.flags;
  D.7496 = (int) D.7495;
  D.7497 = D.7496 & 61440;
  if (D.7497 != 0)
    goto <bb 64>;
  else
    goto <bb 65>;

<bb 64>:
  D.7500 = info->retry.flags;
  D.7501 = (int) D.7500;
  D.7502 = info->retry.value;
  iw_print_retry_value (&buffer, D.7502, D.7501);
  D.7503 = (const char * restrict) &"%s"[0];
  printf (D.7503, &buffer);

<bb 65>:
  D.7504 = info->retry.flags;
  if (D.7504 == 0)
    goto <bb 66>;
  else
    goto <bb 67>;

<bb 66>:
  D.7507 = (const char * restrict) &":on"[0];
  printf (D.7507);

<bb 67>:
  D.7508 = (const char * restrict) &"   "[0];
  printf (D.7508);
  tokens = tokens + 5;

<bb 68>:
  D.7509 = info->has_rts;
  if (D.7509 != 0)
    goto <bb 69>;
  else
    goto <bb 76>;

<bb 69>:
  D.7512 = info->rts.disabled;
  if (D.7512 != 0)
    goto <bb 70>;
  else
    goto <bb 71>;

<bb 70>:
  D.7515 = (const char * restrict) &"RTS thr:off   "[0];
  printf (D.7515);
  goto <bb 75>;

<bb 71>:
  D.7517 = info->rts.fixed;
  if (D.7517 != 0)
    goto <bb 72>;
  else
    goto <bb 73>;

<bb 72>:
  D.7520 = (const char * restrict) &"RTS thr="[0];
  printf (D.7520);
  goto <bb 74>;

<bb 73>:
  D.7522 = (const char * restrict) &"RTS thr:"[0];
  printf (D.7522);

<bb 74>:
  D.7523 = info->rts.value;
  D.7524 = (const char * restrict) &"%d B   "[0];
  printf (D.7524, D.7523);

<bb 75>:
  tokens = tokens + 3;

<bb 76>:
  D.7525 = info->has_frag;
  if (D.7525 != 0)
    goto <bb 77>;
  else
    goto <bb 85>;

<bb 77>:
  if (tokens > 10)
    goto <bb 78>;
  else
    goto <bb 79>;

<bb 78>:
  D.7530 = (const char * restrict) &"\n          "[0];
  printf (D.7530);
  tokens = 0;

<bb 79>:
  tokens = tokens + 4;
  D.7531 = info->frag.disabled;
  if (D.7531 != 0)
    goto <bb 80>;
  else
    goto <bb 81>;

<bb 80>:
  D.7534 = (const char * restrict) &"Fragment thr:off"[0];
  printf (D.7534);
  goto <bb 85>;

<bb 81>:
  D.7536 = info->frag.fixed;
  if (D.7536 != 0)
    goto <bb 82>;
  else
    goto <bb 83>;

<bb 82>:
  D.7539 = (const char * restrict) &"Fragment thr="[0];
  printf (D.7539);
  goto <bb 84>;

<bb 83>:
  D.7541 = (const char * restrict) &"Fragment thr:"[0];
  printf (D.7541);

<bb 84>:
  D.7542 = info->frag.value;
  D.7543 = (const char * restrict) &"%d B   "[0];
  printf (D.7543, D.7542);

<bb 85>:
  if (tokens > 0)
    goto <bb 86>;
  else
    goto <bb 87>;

<bb 86>:
  D.7546 = (const char * restrict) &"\n          "[0];
  printf (D.7546);

<bb 87>:
  D.7547 = info->has_key;
  if (D.7547 != 0)
    goto <bb 88>;
  else
    goto <bb 98>;

<bb 88>:
  D.7550 = (const char * restrict) &"Encryption key:"[0];
  printf (D.7550);
  D.7554 = info->key_flags;
  D.7555 = D.7554 & 32768;
  if (D.7555 != 0)
    goto <bb 90>;
  else
    goto <bb 89>;

<bb 89>:
  D.7557 = info->key_size;
  if (D.7557 == 0)
    goto <bb 90>;
  else
    goto <bb 91>;

<bb 90>:
  D.7558 = (const char * restrict) &"off\n          "[0];
  printf (D.7558);
  goto <bb 98>;

<bb 91>:
  D.7559 = info->key_flags;
  D.7560 = info->key_size;
  D.7561 = &info->key;
  iw_print_key (&buffer, D.7561, D.7560, D.7559);
  D.7562 = (const char * restrict) &"%s"[0];
  printf (D.7562, &buffer);
  D.7563 = info->key_flags;
  D.7564 = D.7563 & 255;
  if (D.7564 > 1)
    goto <bb 92>;
  else
    goto <bb 93>;

<bb 92>:
  D.7567 = info->key_flags;
  D.7568 = D.7567 & 255;
  D.7569 = (const char * restrict) &" [%d]"[0];
  printf (D.7569, D.7568);

<bb 93>:
  D.7570 = info->key_flags;
  D.7571 = D.7570 & 16384;
  if (D.7571 != 0)
    goto <bb 94>;
  else
    goto <bb 95>;

<bb 94>:
  D.7574 = (const char * restrict) &"   Security mode:restricted"[0];
  printf (D.7574);

<bb 95>:
  D.7575 = info->key_flags;
  D.7576 = D.7575 & 8192;
  if (D.7576 != 0)
    goto <bb 96>;
  else
    goto <bb 97>;

<bb 96>:
  D.7579 = (const char * restrict) &"   Security mode:open"[0];
  printf (D.7579);

<bb 97>:
  D.7580 = (const char * restrict) &"\n          "[0];
  printf (D.7580);

<bb 98>:
  D.7581 = info->has_power;
  if (D.7581 != 0)
    goto <bb 99>;
  else
    goto <bb 106>;

<bb 99>:
  D.7584 = (const char * restrict) &"Power Management"[0];
  printf (D.7584);
  D.7585 = info->power.disabled;
  if (D.7585 != 0)
    goto <bb 100>;
  else
    goto <bb 101>;

<bb 100>:
  D.7588 = (const char * restrict) &":off\n          "[0];
  printf (D.7588);
  goto <bb 106>;

<bb 101>:
  D.7590 = info->power.flags;
  D.7591 = (int) D.7590;
  D.7592 = D.7591 & 61440;
  if (D.7592 != 0)
    goto <bb 102>;
  else
    goto <bb 103>;

<bb 102>:
  D.7595 = info->power.flags;
  D.7596 = (int) D.7595;
  D.7597 = info->power.value;
  iw_print_pm_value (&buffer, D.7597, D.7596);
  D.7598 = (const char * restrict) &"%s  "[0];
  printf (D.7598, &buffer);

<bb 103>:
  D.7599 = info->power.flags;
  D.7600 = (int) D.7599;
  iw_print_pm_mode (&buffer, D.7600);
  D.7601 = (const char * restrict) &"%s"[0];
  printf (D.7601, &buffer);
  D.7602 = info->power.flags;
  if (D.7602 == 0)
    goto <bb 104>;
  else
    goto <bb 105>;

<bb 104>:
  D.7605 = (const char * restrict) &":on"[0];
  printf (D.7605);

<bb 105>:
  D.7606 = (const char * restrict) &"\n          "[0];
  printf (D.7606);

<bb 106>:
  D.7607 = info->has_stats;
  if (D.7607 != 0)
    goto <bb 107>;
  else
    goto <bb 108>;

<bb 107>:
  info->stats.qual.updated = 0;
  D.7610 = info->has_range;
  D.7611 = &info->range;
  D.7612 = &info->stats.qual;
  iw_print_stats (&buffer, D.7612, D.7611, D.7610);
  D.7613 = (const char * restrict) &"Link %s\n"[0];
  printf (D.7613, &buffer);
  D.7614 = info->stats.miss.beacon;
  D.7615 = info->stats.discard.misc;
  D.7616 = info->stats.discard.retries;
  D.7617 = info->stats.discard.fragment;
  D.7618 = info->stats.discard.code;
  D.7619 = info->stats.discard.nwid;
  D.7620 = (const char * restrict) &"          Rx invalid nwid:%d  Rx invalid crypt:%d  Rx invalid frag:%d\n          Tx excessive retries:%d  Invalid misc:%d   Missed beacon:%d\n"[0];
  printf (D.7620, D.7619, D.7618, D.7617, D.7616, D.7615, D.7614);

<bb 108>:
  __builtin_putchar (10);
  return;

}



;; Function iw_pr_ether (iw_pr_ether)

Merging blocks 2 and 3
iw_pr_ether (char * bufp, const unsigned char * addr)
{
  char * D.7621;

<bb 2>:
  iw_ether_ntop (addr, bufp);
  D.7621 = bufp;
  return D.7621;

}



;; Function get_info (get_info)

get_info (int skfd, char * ifname, struct wireless_info * info)
{
  struct ifreq ifr;
  struct iwreq wrq;
  int D.7710;
  struct iwstats * D.7709;
  struct iwparam * D.7708;
  int D.7705;
  struct iwparam * D.7704;
  int D.7701;
  struct iwparam * D.7700;
  int D.7697;
  int D.7694;
  int D.7691;
  int D.7690;
  __u32 D.7689;
  int D.7686;
  struct iwparam * D.7685;
  int D.7682;
  struct iwparam * D.7681;
  int D.7678;
  struct iwparam * D.7677;
  int D.7674;
  __u16 D.7671;
  int D.7668;
  char[33] * D.7667;
  struct sockaddr * D.7666;
  int D.7663;
  int D.7662;
  __u16 D.7661;
  int D.7658;
  char[33] * D.7657;
  int D.7656;
  __u16 D.7655;
  int D.7654;
  __u16 D.7653;
  int D.7650;
  unsigned char[64] * D.7649;
  struct iwparam * D.7648;
  int D.7645;
  double D.7644;
  int D.7641;
  struct iwparam * D.7640;
  int D.7637;
  int D.7634;
  struct iwrange * D.7633;
  char[17] * D.7632;
  const char * restrict D.7631;
  int D.7630;
  int D.7627;
  const char * restrict ifname.299;
  int D.7623;

<bb 2>:
  memset (info, 0, 928);
  D.7623 = iw_get_ext (skfd, ifname, 35585, &wrq);
  if (D.7623 < 0)
    goto <bb 3>;
  else
    goto <bb 6>;

<bb 3>:
  ifname.299 = (const char * restrict) ifname;
  strcpy (&ifr.ifr_ifrn.ifrn_name, ifname.299);
  D.7627 = ioctl (skfd, 35091, &ifr);
  if (D.7627 < 0)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:
  D.7630 = -19;
  goto <bb 42>;

<bb 5>:
  D.7630 = -95;
  goto <bb 42>;

<bb 6>:
  D.7631 = (const char * restrict) &wrq.u.name[0];
  D.7632 = &info->name;
  strncpy (D.7632, D.7631, 16);
  info->name[16] = 0;
  D.7633 = &info->range;
  D.7634 = iw_get_range_info (skfd, ifname, D.7633);
  if (D.7634 >= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  info->has_range = 1;

<bb 8>:
  D.7637 = iw_get_ext (skfd, ifname, 35587, &wrq);
  if (D.7637 >= 0)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  info->has_nwid = 1;
  D.7640 = &info->nwid;
  MEM[(char * {ref-all})D.7640] = MEM[(char * {ref-all})&wrq + 16B];

<bb 10>:
  D.7641 = iw_get_ext (skfd, ifname, 35589, &wrq);
  if (D.7641 >= 0)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  info->has_freq = 1;
  D.7644 = iw_freq2float (&wrq.u.freq);
  info->freq = D.7644;

<bb 12>:
  D.7645 = iw_get_ext (skfd, ifname, 35593, &wrq);
  if (D.7645 >= 0)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  info->has_sens = 1;
  D.7648 = &info->sens;
  MEM[(char * {ref-all})D.7648] = MEM[(char * {ref-all})&wrq + 16B];

<bb 14>:
  D.7649 = &info->key;
  wrq.u.data.pointer = D.7649;
  wrq.u.data.length = 64;
  wrq.u.data.flags = 0;
  D.7650 = iw_get_ext (skfd, ifname, 35627, &wrq);
  if (D.7650 >= 0)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  info->has_key = 1;
  D.7653 = wrq.u.data.length;
  D.7654 = (int) D.7653;
  info->key_size = D.7654;
  D.7655 = wrq.u.data.flags;
  D.7656 = (int) D.7655;
  info->key_flags = D.7656;

<bb 16>:
  D.7657 = &info->essid;
  wrq.u.essid.pointer = D.7657;
  wrq.u.essid.length = 33;
  wrq.u.essid.flags = 0;
  D.7658 = iw_get_ext (skfd, ifname, 35611, &wrq);
  if (D.7658 >= 0)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  info->has_essid = 1;
  D.7661 = wrq.u.data.flags;
  D.7662 = (int) D.7661;
  info->essid_on = D.7662;

<bb 18>:
  D.7663 = iw_get_ext (skfd, ifname, 35605, &wrq);
  if (D.7663 >= 0)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  info->has_ap_addr = 1;
  D.7666 = &info->ap_addr;
  MEM[(char * {ref-all})D.7666] = MEM[(char * {ref-all})&wrq + 16B];

<bb 20>:
  D.7667 = &info->nickname;
  wrq.u.essid.pointer = D.7667;
  wrq.u.essid.length = 33;
  wrq.u.essid.flags = 0;
  D.7668 = iw_get_ext (skfd, ifname, 35613, &wrq);
  if (D.7668 >= 0)
    goto <bb 21>;
  else
    goto <bb 23>;

<bb 21>:
  D.7671 = wrq.u.data.length;
  if (D.7671 > 1)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  info->has_nickname = 1;

<bb 23>:
  D.7674 = iw_get_ext (skfd, ifname, 35617, &wrq);
  if (D.7674 >= 0)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  info->has_bitrate = 1;
  D.7677 = &info->bitrate;
  MEM[(char * {ref-all})D.7677] = MEM[(char * {ref-all})&wrq + 16B];

<bb 25>:
  D.7678 = iw_get_ext (skfd, ifname, 35619, &wrq);
  if (D.7678 >= 0)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:
  info->has_rts = 1;
  D.7681 = &info->rts;
  MEM[(char * {ref-all})D.7681] = MEM[(char * {ref-all})&wrq + 16B];

<bb 27>:
  D.7682 = iw_get_ext (skfd, ifname, 35621, &wrq);
  if (D.7682 >= 0)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  info->has_frag = 1;
  D.7685 = &info->frag;
  MEM[(char * {ref-all})D.7685] = MEM[(char * {ref-all})&wrq + 16B];

<bb 29>:
  D.7686 = iw_get_ext (skfd, ifname, 35591, &wrq);
  if (D.7686 >= 0)
    goto <bb 30>;
  else
    goto <bb 33>;

<bb 30>:
  D.7689 = wrq.u.mode;
  D.7690 = (int) D.7689;
  info->mode = D.7690;
  D.7691 = info->mode;
  if (D.7691 <= 6)
    goto <bb 31>;
  else
    goto <bb 33>;

<bb 31>:
  D.7694 = info->mode;
  if (D.7694 >= 0)
    goto <bb 32>;
  else
    goto <bb 33>;

<bb 32>:
  info->has_mode = 1;

<bb 33>:
  wrq.u.power.flags = 0;
  D.7697 = iw_get_ext (skfd, ifname, 35629, &wrq);
  if (D.7697 >= 0)
    goto <bb 34>;
  else
    goto <bb 35>;

<bb 34>:
  info->has_power = 1;
  D.7700 = &info->power;
  MEM[(char * {ref-all})D.7700] = MEM[(char * {ref-all})&wrq + 16B];

<bb 35>:
  D.7701 = iw_get_ext (skfd, ifname, 35623, &wrq);
  if (D.7701 >= 0)
    goto <bb 36>;
  else
    goto <bb 37>;

<bb 36>:
  info->has_txpower = 1;
  D.7704 = &info->txpower;
  MEM[(char * {ref-all})D.7704] = MEM[(char * {ref-all})&wrq + 16B];

<bb 37>:
  D.7705 = iw_get_ext (skfd, ifname, 35625, &wrq);
  if (D.7705 >= 0)
    goto <bb 38>;
  else
    goto <bb 39>;

<bb 38>:
  info->has_retry = 1;
  D.7708 = &info->retry;
  MEM[(char * {ref-all})D.7708] = MEM[(char * {ref-all})&wrq + 16B];

<bb 39>:
  D.7709 = &info->stats;
  D.7710 = iw_get_stats (skfd, ifname, D.7709);
  if (D.7710 >= 0)
    goto <bb 40>;
  else
    goto <bb 41>;

<bb 40>:
  info->has_stats = 1;

<bb 41>:
  D.7630 = 0;

<bb 42>:
  return D.7630;

}



;; Function iw_usage (iw_usage)

iw_usage ()
{
  const char * restrict D.7758;
  struct FILE * restrict stderr.329;
  struct _IO_FILE * stderr.328;
  const char * restrict D.7755;
  struct FILE * restrict stderr.327;
  struct _IO_FILE * stderr.326;
  const char * restrict D.7752;
  struct FILE * restrict stderr.325;
  struct _IO_FILE * stderr.324;
  const char * restrict D.7749;
  struct FILE * restrict stderr.323;
  struct _IO_FILE * stderr.322;
  const char * restrict D.7746;
  struct FILE * restrict stderr.321;
  struct _IO_FILE * stderr.320;
  const char * restrict D.7743;
  struct FILE * restrict stderr.319;
  struct _IO_FILE * stderr.318;
  const char * restrict D.7740;
  struct FILE * restrict stderr.317;
  struct _IO_FILE * stderr.316;
  const char * restrict D.7737;
  struct FILE * restrict stderr.315;
  struct _IO_FILE * stderr.314;
  const char * restrict D.7734;
  struct FILE * restrict stderr.313;
  struct _IO_FILE * stderr.312;
  const char * restrict D.7731;
  struct FILE * restrict stderr.311;
  struct _IO_FILE * stderr.310;
  const char * restrict D.7728;
  struct FILE * restrict stderr.309;
  struct _IO_FILE * stderr.308;
  const char * restrict D.7725;
  struct FILE * restrict stderr.307;
  struct _IO_FILE * stderr.306;
  const char * restrict D.7722;
  struct FILE * restrict stderr.305;
  struct _IO_FILE * stderr.304;
  const char * restrict D.7719;
  struct FILE * restrict stderr.303;
  struct _IO_FILE * stderr.302;
  const char * restrict D.7716;
  struct FILE * restrict stderr.301;
  struct _IO_FILE * stderr.300;

<bb 2>:
  stderr.300 = stderr;
  stderr.301 = (struct FILE * restrict) stderr.300;
  D.7716 = (const char * restrict) &"Usage: iwconfig interface [essid {NN|on|off}]\n"[0];
  __builtin_fwrite (D.7716, 1, 46, stderr.301);
  stderr.302 = stderr;
  stderr.303 = (struct FILE * restrict) stderr.302;
  D.7719 = (const char * restrict) &"                          [nwid {NN|on|off}]\n"[0];
  __builtin_fwrite (D.7719, 1, 45, stderr.303);
  stderr.304 = stderr;
  stderr.305 = (struct FILE * restrict) stderr.304;
  D.7722 = (const char * restrict) &"                          [mode {managed|ad-hoc|...}\n"[0];
  __builtin_fwrite (D.7722, 1, 53, stderr.305);
  stderr.306 = stderr;
  stderr.307 = (struct FILE * restrict) stderr.306;
  D.7725 = (const char * restrict) &"                          [freq N.NNNN[k|M|G]]\n"[0];
  __builtin_fwrite (D.7725, 1, 47, stderr.307);
  stderr.308 = stderr;
  stderr.309 = (struct FILE * restrict) stderr.308;
  D.7728 = (const char * restrict) &"                          [channel N]\n"[0];
  __builtin_fwrite (D.7728, 1, 38, stderr.309);
  stderr.310 = stderr;
  stderr.311 = (struct FILE * restrict) stderr.310;
  D.7731 = (const char * restrict) &"                          [sens N]\n"[0];
  __builtin_fwrite (D.7731, 1, 35, stderr.311);
  stderr.312 = stderr;
  stderr.313 = (struct FILE * restrict) stderr.312;
  D.7734 = (const char * restrict) &"                          [nick N]\n"[0];
  __builtin_fwrite (D.7734, 1, 35, stderr.313);
  stderr.314 = stderr;
  stderr.315 = (struct FILE * restrict) stderr.314;
  D.7737 = (const char * restrict) &"                          [rate {N|auto|fixed}]\n"[0];
  __builtin_fwrite (D.7737, 1, 48, stderr.315);
  stderr.316 = stderr;
  stderr.317 = (struct FILE * restrict) stderr.316;
  D.7740 = (const char * restrict) &"                          [rts {N|auto|fixed|off}]\n"[0];
  __builtin_fwrite (D.7740, 1, 51, stderr.317);
  stderr.318 = stderr;
  stderr.319 = (struct FILE * restrict) stderr.318;
  D.7743 = (const char * restrict) &"                          [frag {N|auto|fixed|off}]\n"[0];
  __builtin_fwrite (D.7743, 1, 52, stderr.319);
  stderr.320 = stderr;
  stderr.321 = (struct FILE * restrict) stderr.320;
  D.7746 = (const char * restrict) &"                          [enc {NNNN-NNNN|off}]\n"[0];
  __builtin_fwrite (D.7746, 1, 48, stderr.321);
  stderr.322 = stderr;
  stderr.323 = (struct FILE * restrict) stderr.322;
  D.7749 = (const char * restrict) &"                          [power {period N|timeout N}]\n"[0];
  __builtin_fwrite (D.7749, 1, 55, stderr.323);
  stderr.324 = stderr;
  stderr.325 = (struct FILE * restrict) stderr.324;
  D.7752 = (const char * restrict) &"                          [txpower N {mW|dBm}]\n"[0];
  __builtin_fwrite (D.7752, 1, 47, stderr.325);
  stderr.326 = stderr;
  stderr.327 = (struct FILE * restrict) stderr.326;
  D.7755 = (const char * restrict) &"                          [commit]\n"[0];
  __builtin_fwrite (D.7755, 1, 35, stderr.327);
  stderr.328 = stderr;
  stderr.329 = (struct FILE * restrict) stderr.328;
  D.7758 = (const char * restrict) &"       Check man pages for more details.\n\n"[0];
  __builtin_fwrite (D.7758, 1, 42, stderr.329);
  return;

}


