#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h> 

#define BUFFER_SIZE 256

void error(const char *msg)
{
	perror(msg);
	exit(0);
}

int main(int argc, char *argv[])
{
	int sockfd, portno, n;
	int count = 0;
	struct sockaddr_in serv_addr;
	struct hostent *server;
	struct timeval timeout; 
	
	char buffer[BUFFER_SIZE];
	if (argc < 3) {
		fprintf(stderr,"usage %s hostname port\n", argv[0]);
		exit(0);
	}
	portno = atoi(argv[2]);
	sockfd = socket(AF_INET, SOCK_STREAM, 0);
	if (sockfd < 0) 
		error("ERROR opening socket");
	server = gethostbyname(argv[1]);
	if (server == NULL) {
		fprintf(stderr,"ERROR, no such host\n");
		exit(0);
	}
	bzero((char *) &serv_addr, sizeof(serv_addr));
	serv_addr.sin_family = AF_INET;
	bcopy((char *)server->h_addr, 
	(char *)&serv_addr.sin_addr.s_addr,
	server->h_length);
	serv_addr.sin_port = htons(portno);
	if (connect(sockfd,(struct sockaddr *) &serv_addr,sizeof(serv_addr)) < 0) 
		error("ERROR connecting");
	
	
	timeout.tv_sec = 10;
	timeout.tv_usec = 0;
	
	if (setsockopt (sockfd, SOL_SOCKET, SO_RCVTIMEO, (char *)&timeout, sizeof(timeout)) < 0)
		error("setsockopt failed\n");    
	
	while(count < 100)
	{
		printf("Please enter the message: ");
		fgets(buffer, BUFFER_SIZE - 1, stdin);
		printf("Message: %s\n", buffer);
		
		n = write(sockfd,buffer,strlen(buffer));
		printf("Sent: %s\n",buffer);
		if (n < 0) 
			error("ERROR writing to socket");
		
		sleep(1);
		
		bzero(buffer,BUFFER_SIZE);
		n = read(sockfd,buffer,BUFFER_SIZE);
		//count = atoi(buffer);
		//if (n < 0) 
		//error("ERROR reading from socket");
		printf("Received: %s\n",buffer);
		count++;
	}
	
	close(sockfd);
	return 0;
}
